{"/Users/tony/IdeaProjects/project_team122/src/controller/IInsightFacade.ts":{"path":"/Users/tony/IdeaProjects/project_team122/src/controller/IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":37,"6":37,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":1},"f":{"0":1,"1":37,"2":1,"3":0},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/tony/IdeaProjects/project_team122/src/controller/IInsightFacade.ts","sources":["/Users/tony/IdeaProjects/project_team122/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,2CAAqB,CAAA;IACrB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAYD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\n * This is the primary high-level API for the project. In this folder there should be:\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\n * You should not change this interface at all or the test suite will not work.\n */\n\nexport enum InsightDatasetKind {\n\tSections = \"sections\",\n\tRooms = \"rooms\",\n}\n\nexport interface InsightDataset {\n\tid: string;\n\tkind: InsightDatasetKind;\n\tnumRows: number;\n}\n\nexport interface InsightResult {\n\t[key: string]: string | number;\n}\n\nexport class InsightError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, InsightError);\n\t}\n}\n\nexport class NotFoundError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, NotFoundError);\n\t}\n}\n\nexport class ResultTooLargeError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, ResultTooLargeError);\n\t}\n}\n\nexport interface IInsightFacade {\n\t/**\n\t * Add a dataset to insightUBC.\n\t *\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\n\t * @param kind  The kind of the dataset\n\t *\n\t * @return Promise <string[]>\n\t *\n\t * The promise should fulfill on a successful add, reject for any failures.\n\t * The promise should fulfill with a string array,\n\t * containing the ids of all currently added datasets upon a successful add.\n\t * The promise should reject with an InsightError describing the error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\n\t *\n\t * After receiving the dataset, it should be processed into a data structure of\n\t * your design. The processed data structure should be persisted to disk; your\n\t * system should be able to load this persisted value into memory for answering\n\t * queries.\n\t *\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\n\t * be successfully answered.\n\t */\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\n\n\t/**\n\t * Remove a dataset from insightUBC.\n\t *\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\n\t *\n\t * @return Promise <string>\n\t *\n\t * The promise should fulfill upon a successful removal, reject on any error.\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t *\n\t * The promise should fulfill the id of the dataset that was removed.\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\n\t *\n\t * This will delete both disk and memory caches for the dataset for the id meaning\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\n\t */\n\tremoveDataset(id: string): Promise<string>;\n\n\t/**\n\t * Perform a query on insightUBC.\n\t *\n\t * @param query  The query to be performed.\n\t *\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\n\t * or references multiple datasets, it should be rejected.\n\t *\n\t * @return Promise <InsightResult[]>\n\t *\n\t * The promise should fulfill with an array of results.\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\n\t * or an InsightError (for any other source of failure) describing the error.\n\t */\n\tperformQuery(query: unknown): Promise<InsightResult[]>;\n\n\t/**\n\t * List all currently added datasets, their types, and number of rows.\n\t *\n\t * @return Promise <InsightDataset[]>\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\n\t */\n\tlistDatasets(): Promise<InsightDataset[]>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8494880c5d0df7fccc3d574874da26b7e583f11a","contentHash":"e5e3818333a1769a7dcad01c67978656acb290f7837295242e0e65ccd100f308"},"/Users/tony/IdeaProjects/project_team122/src/controller/InsightFacade.ts":{"path":"/Users/tony/IdeaProjects/project_team122/src/controller/InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"25":{"start":{"line":26,"column":4},"end":{"line":26,"column":62}},"26":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}},"27":{"start":{"line":29,"column":0},"end":{"line":29,"column":25}},"28":{"start":{"line":30,"column":25},"end":{"line":30,"column":52}},"29":{"start":{"line":31,"column":16},"end":{"line":31,"column":49}},"30":{"start":{"line":32,"column":11},"end":{"line":32,"column":44}},"31":{"start":{"line":33,"column":15},"end":{"line":33,"column":47}},"32":{"start":{"line":34,"column":21},"end":{"line":34,"column":61}},"33":{"start":{"line":47,"column":8},"end":{"line":47,"column":25}},"34":{"start":{"line":48,"column":8},"end":{"line":48,"column":21}},"35":{"start":{"line":49,"column":8},"end":{"line":49,"column":27}},"36":{"start":{"line":50,"column":8},"end":{"line":50,"column":37}},"37":{"start":{"line":51,"column":8},"end":{"line":51,"column":25}},"38":{"start":{"line":52,"column":8},"end":{"line":52,"column":25}},"39":{"start":{"line":53,"column":8},"end":{"line":53,"column":23}},"40":{"start":{"line":54,"column":8},"end":{"line":54,"column":25}},"41":{"start":{"line":55,"column":8},"end":{"line":55,"column":25}},"42":{"start":{"line":56,"column":8},"end":{"line":56,"column":27}},"43":{"start":{"line":59,"column":0},"end":{"line":59,"column":26}},"44":{"start":{"line":62,"column":14},"end":{"line":62,"column":22}},"45":{"start":{"line":65,"column":8},"end":{"line":65,"column":27}},"46":{"start":{"line":66,"column":8},"end":{"line":66,"column":49}},"47":{"start":{"line":67,"column":8},"end":{"line":67,"column":71}},"48":{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},"49":{"start":{"line":71,"column":12},"end":{"line":71,"column":66}},"50":{"start":{"line":73,"column":8},"end":{"line":77,"column":9}},"51":{"start":{"line":74,"column":12},"end":{"line":76,"column":13}},"52":{"start":{"line":75,"column":16},"end":{"line":75,"column":99}},"53":{"start":{"line":78,"column":25},"end":{"line":78,"column":59}},"54":{"start":{"line":79,"column":8},"end":{"line":79,"column":41}},"55":{"start":{"line":80,"column":25},"end":{"line":80,"column":72}},"56":{"start":{"line":81,"column":8},"end":{"line":81,"column":63}},"57":{"start":{"line":82,"column":8},"end":{"line":86,"column":11}},"58":{"start":{"line":87,"column":20},"end":{"line":87,"column":22}},"59":{"start":{"line":88,"column":8},"end":{"line":90,"column":9}},"60":{"start":{"line":89,"column":12},"end":{"line":89,"column":33}},"61":{"start":{"line":91,"column":8},"end":{"line":91,"column":19}},"62":{"start":{"line":94,"column":8},"end":{"line":96,"column":9}},"63":{"start":{"line":95,"column":12},"end":{"line":95,"column":66}},"64":{"start":{"line":97,"column":29},"end":{"line":97,"column":84}},"65":{"start":{"line":97,"column":66},"end":{"line":97,"column":83}},"66":{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},"67":{"start":{"line":99,"column":12},"end":{"line":99,"column":74}},"68":{"start":{"line":101,"column":8},"end":{"line":109,"column":9}},"69":{"start":{"line":102,"column":12},"end":{"line":102,"column":50}},"70":{"start":{"line":103,"column":29},"end":{"line":103,"column":76}},"71":{"start":{"line":104,"column":12},"end":{"line":104,"column":38}},"72":{"start":{"line":105,"column":12},"end":{"line":105,"column":22}},"73":{"start":{"line":108,"column":12},"end":{"line":108,"column":104}},"74":{"start":{"line":112,"column":8},"end":{"line":112,"column":46}},"75":{"start":{"line":115,"column":20},"end":{"line":115,"column":81}},"76":{"start":{"line":116,"column":32},"end":{"line":116,"column":34}},"77":{"start":{"line":117,"column":8},"end":{"line":124,"column":9}},"78":{"start":{"line":118,"column":12},"end":{"line":123,"column":13}},"79":{"start":{"line":121,"column":39},"end":{"line":121,"column":65}},"80":{"start":{"line":122,"column":16},"end":{"line":122,"column":53}},"81":{"start":{"line":125,"column":31},"end":{"line":125,"column":65}},"82":{"start":{"line":126,"column":25},"end":{"line":126,"column":81}},"83":{"start":{"line":126,"column":61},"end":{"line":126,"column":76}},"84":{"start":{"line":127,"column":8},"end":{"line":127,"column":24}},"85":{"start":{"line":130,"column":28},"end":{"line":130,"column":54}},"86":{"start":{"line":131,"column":27},"end":{"line":131,"column":50}},"87":{"start":{"line":132,"column":28},"end":{"line":132,"column":45}},"88":{"start":{"line":133,"column":25},"end":{"line":133,"column":27}},"89":{"start":{"line":134,"column":8},"end":{"line":146,"column":11}},"90":{"start":{"line":135,"column":25},"end":{"line":135,"column":31}},"91":{"start":{"line":136,"column":23},"end":{"line":136,"column":33}},"92":{"start":{"line":137,"column":26},"end":{"line":137,"column":35}},"93":{"start":{"line":138,"column":31},"end":{"line":138,"column":44}},"94":{"start":{"line":139,"column":25},"end":{"line":139,"column":36}},"95":{"start":{"line":140,"column":25},"end":{"line":140,"column":33}},"96":{"start":{"line":141,"column":24},"end":{"line":141,"column":31}},"97":{"start":{"line":142,"column":25},"end":{"line":142,"column":33}},"98":{"start":{"line":143,"column":25},"end":{"line":143,"column":33}},"99":{"start":{"line":144,"column":26},"end":{"line":144,"column":35}},"100":{"start":{"line":145,"column":12},"end":{"line":145,"column":104}},"101":{"start":{"line":147,"column":8},"end":{"line":147,"column":24}},"102":{"start":{"line":150,"column":27},"end":{"line":150,"column":32}},"103":{"start":{"line":151,"column":8},"end":{"line":153,"column":9}},"104":{"start":{"line":152,"column":12},"end":{"line":152,"column":71}},"105":{"start":{"line":154,"column":8},"end":{"line":154,"column":67}},"106":{"start":{"line":157,"column":0},"end":{"line":157,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":56},"end":{"line":25,"column":57}},"loc":{"start":{"line":25,"column":71},"end":{"line":27,"column":1}},"line":25},"7":{"name":"(anonymous_7)","decl":{"start":{"line":46,"column":4},"end":{"line":46,"column":5}},"loc":{"start":{"line":46,"column":81},"end":{"line":57,"column":5}},"line":46},"8":{"name":"(anonymous_8)","decl":{"start":{"line":64,"column":4},"end":{"line":64,"column":5}},"loc":{"start":{"line":64,"column":18},"end":{"line":68,"column":5}},"line":64},"9":{"name":"(anonymous_9)","decl":{"start":{"line":69,"column":4},"end":{"line":69,"column":5}},"loc":{"start":{"line":69,"column":40},"end":{"line":92,"column":5}},"line":69},"10":{"name":"(anonymous_10)","decl":{"start":{"line":93,"column":4},"end":{"line":93,"column":5}},"loc":{"start":{"line":93,"column":28},"end":{"line":110,"column":5}},"line":93},"11":{"name":"(anonymous_11)","decl":{"start":{"line":97,"column":53},"end":{"line":97,"column":54}},"loc":{"start":{"line":97,"column":66},"end":{"line":97,"column":83}},"line":97},"12":{"name":"(anonymous_12)","decl":{"start":{"line":111,"column":4},"end":{"line":111,"column":5}},"loc":{"start":{"line":111,"column":25},"end":{"line":113,"column":5}},"line":111},"13":{"name":"(anonymous_13)","decl":{"start":{"line":114,"column":4},"end":{"line":114,"column":5}},"loc":{"start":{"line":114,"column":37},"end":{"line":128,"column":5}},"line":114},"14":{"name":"(anonymous_14)","decl":{"start":{"line":126,"column":47},"end":{"line":126,"column":48}},"loc":{"start":{"line":126,"column":61},"end":{"line":126,"column":76}},"line":126},"15":{"name":"(anonymous_15)","decl":{"start":{"line":129,"column":4},"end":{"line":129,"column":5}},"loc":{"start":{"line":129,"column":32},"end":{"line":148,"column":5}},"line":129},"16":{"name":"(anonymous_16)","decl":{"start":{"line":134,"column":28},"end":{"line":134,"column":29}},"loc":{"start":{"line":134,"column":44},"end":{"line":146,"column":9}},"line":134},"17":{"name":"(anonymous_17)","decl":{"start":{"line":149,"column":4},"end":{"line":149,"column":5}},"loc":{"start":{"line":149,"column":30},"end":{"line":155,"column":5}},"line":149}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":27}},{"start":{"line":25,"column":31},"end":{"line":25,"column":51}},{"start":{"line":25,"column":56},"end":{"line":27,"column":1}}],"line":25},"17":{"loc":{"start":{"line":26,"column":11},"end":{"line":26,"column":61}},"type":"cond-expr","locations":[{"start":{"line":26,"column":37},"end":{"line":26,"column":40}},{"start":{"line":26,"column":43},"end":{"line":26,"column":61}}],"line":26},"18":{"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":33}},"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":15}},{"start":{"line":26,"column":19},"end":{"line":26,"column":33}}],"line":26},"19":{"loc":{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},"type":"if","locations":[{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},{"start":{"line":70,"column":8},"end":{"line":72,"column":9}}],"line":70},"20":{"loc":{"start":{"line":70,"column":12},"end":{"line":70,"column":61}},"type":"binary-expr","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":15}},{"start":{"line":70,"column":19},"end":{"line":70,"column":41}},{"start":{"line":70,"column":45},"end":{"line":70,"column":61}}],"line":70},"21":{"loc":{"start":{"line":74,"column":12},"end":{"line":76,"column":13}},"type":"if","locations":[{"start":{"line":74,"column":12},"end":{"line":76,"column":13}},{"start":{"line":74,"column":12},"end":{"line":76,"column":13}}],"line":74},"22":{"loc":{"start":{"line":94,"column":8},"end":{"line":96,"column":9}},"type":"if","locations":[{"start":{"line":94,"column":8},"end":{"line":96,"column":9}},{"start":{"line":94,"column":8},"end":{"line":96,"column":9}}],"line":94},"23":{"loc":{"start":{"line":94,"column":12},"end":{"line":94,"column":61}},"type":"binary-expr","locations":[{"start":{"line":94,"column":12},"end":{"line":94,"column":15}},{"start":{"line":94,"column":19},"end":{"line":94,"column":41}},{"start":{"line":94,"column":45},"end":{"line":94,"column":61}}],"line":94},"24":{"loc":{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},"type":"if","locations":[{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},{"start":{"line":98,"column":8},"end":{"line":100,"column":9}}],"line":98},"25":{"loc":{"start":{"line":118,"column":12},"end":{"line":123,"column":13}},"type":"if","locations":[{"start":{"line":118,"column":12},"end":{"line":123,"column":13}},{"start":{"line":118,"column":12},"end":{"line":123,"column":13}}],"line":118},"26":{"loc":{"start":{"line":151,"column":8},"end":{"line":153,"column":9}},"type":"if","locations":[{"start":{"line":151,"column":8},"end":{"line":153,"column":9}},{"start":{"line":151,"column":8},"end":{"line":153,"column":9}}],"line":151}},"s":{"0":1,"1":148,"2":148,"3":148,"4":148,"5":148,"6":9,"7":148,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":148,"21":148,"22":1,"23":1,"24":1,"25":3,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":258448,"34":258448,"35":258448,"36":258448,"37":258448,"38":258448,"39":258448,"40":258448,"41":258448,"42":258448,"43":1,"44":11,"45":11,"46":11,"47":11,"48":8,"49":3,"50":5,"51":1,"52":1,"53":4,"54":4,"55":4,"56":4,"57":4,"58":4,"59":4,"60":4,"61":4,"62":5,"63":3,"64":2,"65":1,"66":2,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":0,"74":0,"75":4,"76":4,"77":4,"78":23780,"79":23776,"80":23776,"81":4,"82":4,"83":23776,"84":4,"85":23776,"86":23776,"87":23776,"88":23776,"89":23776,"90":258448,"91":258448,"92":258448,"93":258448,"94":258448,"95":258448,"96":258448,"97":258448,"98":258448,"99":258448,"100":258448,"101":23776,"102":30,"103":30,"104":30,"105":0,"106":1},"f":{"0":148,"1":9,"2":0,"3":1,"4":0,"5":1,"6":3,"7":258448,"8":11,"9":8,"10":5,"11":1,"12":0,"13":4,"14":23776,"15":23776,"16":258448,"17":30},"b":{"0":[1,1,1],"1":[1,0],"2":[148,0],"3":[148,0],"4":[148,148],"5":[0,148],"6":[148,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[148,0],"15":[148,148],"16":[1,1,1],"17":[1,2],"18":[3,3],"19":[3,5],"20":[8,7,6],"21":[1,0],"22":[3,2],"23":[5,4,3],"24":[1,1],"25":[4,23776],"26":[30,0]},"inputSourceMap":{"version":3,"file":"/Users/tony/IdeaProjects/project_team122/src/controller/InsightFacade.ts","sources":["/Users/tony/IdeaProjects/project_team122/src/controller/InsightFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tIInsightFacade,\n\tInsightDataset,\n\tInsightDatasetKind,\n\tInsightError,\n\tInsightResult,\n\tNotFoundError\n} from \"./IInsightFacade\";\nimport jszip from \"jszip\";\nimport * as fs from \"fs-extra\";\nimport path from \"path\";\nimport {symlinkSync} from \"fs\";\nimport HelperFunctions, {Option, Query, Where} from \"./QueryModel\";\n\n\n/**\n * This is the main programmatic entry point for the project.\n * Method documentation is in IInsightFacade\n *\n */\nexport class Section {\n\tprivate readonly uuid: string;\n\tprivate readonly id: string;\n\tprivate readonly title: string;\n\tprivate readonly instructor: string;\n\tprivate readonly dept: string;\n\tprivate readonly year: number;\n\tprivate readonly avg: number;\n\tprivate readonly pass: number;\n\tprivate readonly fail: number;\n\tprivate readonly audit: number;\n\n\tconstructor(uuid: string, id: string, title: string, instructor: string, dept: string, year: number, avg: number,\n\t\tpass: number, fail: number, audit: number) {\n\t\tthis.uuid = uuid;\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.instructor = instructor;\n\t\tthis.dept = dept;\n\t\tthis.year = year;\n\t\tthis.avg = avg;\n\t\tthis.pass = pass;\n\t\tthis.fail = fail;\n\t\tthis.audit = audit;\n\t}\n}\n\nexport default class InsightFacade implements IInsightFacade {\n\tprivate readonly datasets: InsightDataset[];\n\tprivate readonly dataDir: string = \"./data\"; // Directory to store the processed datasets\n\tprivate readonly helperFunctions: HelperFunctions;\n\n\tconstructor() {\n\t\tthis.datasets = [];\n\t\tconsole.log(\"InsightFacadeImpl::init()\");\n\t\tthis.helperFunctions = new HelperFunctions(this.datasets);\n\t}\n\n\tpublic async addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\n\t\t// Validate the id\n\t\tif (!id || id.trim().length === 0 || id.includes(\"_\")) {\n\t\t\tthrow new InsightError(\"Invalid id\");\n\t\t}\n\n\t\t// Check if the dataset with the same id already exists\n\t\tfor (let dataset of this.datasets) {\n\t\t\tif (dataset.id === id) {\n\t\t\t\tthrow new InsightError(\"Dataset with the same id already exists\");\n\t\t\t}\n\t\t}\n\n\t\t// Process and save the dataset\n\t\tconst sections = await this.processZipFile(content);\n\n\t\t// Ensure the data directory exists\n\t\tawait fs.ensureDir(this.dataDir);\n\n\t\t// Save the processed data to disk\n\t\tconst filePath = path.join(this.dataDir, `${id}.json`);\n\t\tawait fs.writeJson(filePath, JSON.stringify(sections));\n\n\t\t// Add the datasets object\n\t\tthis.datasets.push(\n\t\t\t{\n\t\t\t\tid,\n\t\t\t\tkind,\n\t\t\t\tnumRows: sections.length\n\t\t\t}\n\t\t);\n\n\t\t// Return the list of currently added datasets\n\t\tconst ids: string[] = [];\n\n\t\tfor (let dataset of this.datasets) {\n\t\t\tids.push(dataset.id);\n\t\t}\n\n\t\treturn ids;\n\t}\n\n\tpublic async removeDataset(id: string): Promise<string> {\n\t\t// Validate the id\n\t\tif (!id || id.trim().length === 0 || id.includes(\"_\")) {\n\t\t\tthrow new InsightError(\"Invalid id\");\n\t\t}\n\n\t\t// Check if the dataset with the specified id exists\n\t\tconst datasetIndex = this.datasets.findIndex((dataset) => dataset.id === id);\n\t\tif (datasetIndex === -1) {\n\t\t\tthrow new NotFoundError(\"Dataset not found\");\n\t\t}\n\n\t\ttry {\n\t\t\t// Remove dataset from memory\n\t\t\tthis.datasets.splice(datasetIndex, 1);\n\n\t\t\t// Remove dataset from disk\n\t\t\tconst filePath = path.join(this.dataDir, `${id}.json`);\n\t\t\tawait fs.remove(filePath);\n\n\t\t\treturn id;\n\t\t} catch (error: any) {\n\t\t\t// If any error occurs during removal, throw an InsightError\n\t\t\tthrow new InsightError(`Failed to remove dataset ${id}: ${error.message}`);\n\t\t}\n\t}\n\n\tpublic async listDatasets(): Promise<InsightDataset[]> {\n\t\treturn Promise.resolve(this.datasets);\n\t}\n\n\t// Helpers\n\tprivate async processZipFile(zipContent: string): Promise<Section[]> {\n\t\tconst zip = await jszip.loadAsync(zipContent, {base64: true});\n\t\tconst sectionPromises: Array<Promise<Section[]>> = [];\n\n\t\tfor (const [relativePath, file] of Object.entries(zip.files)) {\n\t\t\tif (file.dir) {\n\t\t\t\t// Skip courses directory\n\t\t\t} else {\n\t\t\t\tconst sectionPromise = this.extractSections(file);\n\t\t\t\tsectionPromises.push(sectionPromise);\n\t\t\t}\n\t\t}\n\n\t\t// Use Promise.all to wait for all async calls to complete\n\t\tconst sectionsArrays = await Promise.all(sectionPromises);\n\n\t\t// Flatten the array of arrays into a single array of sections\n\t\tconst sections: Section[] = sectionsArrays.reduce((acc, val) => acc.concat(val), []);\n\n\t\treturn sections;\n\t}\n\n\tprivate async extractSections(file: jszip.JSZipObject): Promise<Section[]> {\n\t\t// Parse the file content\n\t\tconst fileContent = await file.async(\"string\");\n\n\t\t// Parse the string into a JSON object\n\t\tconst jsonObject = JSON.parse(fileContent);\n\n\t\t// Extract the \"result\" array from the JSON object\n\t\tconst resultArray = jsonObject.result;\n\n\t\tconst sections: Section[] = [];\n\n\t\tresultArray.forEach((obj: any, index: any) => {\n\t\t\tconst uuid = obj.id;\n\t\t\tconst id = obj.Course;\n\t\t\tconst title = obj.Title;\n\t\t\tconst instructor = obj.Professor;\n\t\t\tconst dept = obj.Subject;\n\t\t\tconst year = obj.Year;\n\t\t\tconst avg = obj.Avg;\n\t\t\tconst pass = obj.Pass;\n\t\t\tconst fail = obj.Fail;\n\t\t\tconst audit = obj.Audit;\n\n\t\t\tsections.push(new Section(uuid, id, title, instructor, dept, year, avg, pass, fail, audit));\n\t\t});\n\n\t\treturn sections;\n\t}\n\n\tpublic async performQuery(query: unknown): Promise<InsightResult[]> {\n\t\tconst queryModel: Query = query as Query;\n\t\tif (!this.helperFunctions.validateQuery(queryModel)) {\n\t\t\treturn Promise.reject(new InsightError());\n\t\t}\n\t\treturn Promise.reject(new InsightError());\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"52aa6fc5c608c7a0defe020e678bc360cd791b8e","contentHash":"f6acce65c7d5f1297368e3dab63b23a3ef1f29e1a9a58774604628cc3602e283"},"/Users/tony/IdeaProjects/project_team122/src/controller/QueryModel.ts":{"path":"/Users/tony/IdeaProjects/project_team122/src/controller/QueryModel.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":21},"end":{"line":5,"column":24}},"2":{"start":{"line":6,"column":20},"end":{"line":6,"column":22}},"3":{"start":{"line":8,"column":8},"end":{"line":8,"column":33}},"4":{"start":{"line":11,"column":8},"end":{"line":20,"column":9}},"5":{"start":{"line":12,"column":12},"end":{"line":12,"column":25}},"6":{"start":{"line":15,"column":12},"end":{"line":19,"column":13}},"7":{"start":{"line":16,"column":16},"end":{"line":18,"column":17}},"8":{"start":{"line":17,"column":20},"end":{"line":17,"column":33}},"9":{"start":{"line":21,"column":8},"end":{"line":21,"column":20}},"10":{"start":{"line":24,"column":8},"end":{"line":33,"column":9}},"11":{"start":{"line":25,"column":12},"end":{"line":25,"column":25}},"12":{"start":{"line":28,"column":12},"end":{"line":32,"column":13}},"13":{"start":{"line":29,"column":16},"end":{"line":31,"column":17}},"14":{"start":{"line":30,"column":20},"end":{"line":30,"column":33}},"15":{"start":{"line":34,"column":8},"end":{"line":34,"column":20}},"16":{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},"17":{"start":{"line":38,"column":12},"end":{"line":38,"column":25}},"18":{"start":{"line":40,"column":8},"end":{"line":40,"column":44}},"19":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"20":{"start":{"line":44,"column":12},"end":{"line":44,"column":25}},"21":{"start":{"line":46,"column":21},"end":{"line":46,"column":39}},"22":{"start":{"line":47,"column":32},"end":{"line":47,"column":49}},"23":{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},"24":{"start":{"line":49,"column":12},"end":{"line":49,"column":25}},"25":{"start":{"line":51,"column":25},"end":{"line":51,"column":59}},"26":{"start":{"line":52,"column":23},"end":{"line":52,"column":58}},"27":{"start":{"line":53,"column":20},"end":{"line":53,"column":22}},"28":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"29":{"start":{"line":55,"column":12},"end":{"line":55,"column":33}},"30":{"start":{"line":57,"column":8},"end":{"line":64,"column":9}},"31":{"start":{"line":58,"column":12},"end":{"line":58,"column":43}},"32":{"start":{"line":61,"column":12},"end":{"line":63,"column":13}},"33":{"start":{"line":62,"column":16},"end":{"line":62,"column":29}},"34":{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},"35":{"start":{"line":66,"column":12},"end":{"line":66,"column":25}},"36":{"start":{"line":68,"column":31},"end":{"line":68,"column":71}},"37":{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},"38":{"start":{"line":70,"column":12},"end":{"line":70,"column":25}},"39":{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},"40":{"start":{"line":73,"column":12},"end":{"line":73,"column":25}},"41":{"start":{"line":75,"column":8},"end":{"line":75,"column":38}},"42":{"start":{"line":76,"column":8},"end":{"line":76,"column":20}},"43":{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},"44":{"start":{"line":80,"column":12},"end":{"line":80,"column":25}},"45":{"start":{"line":82,"column":21},"end":{"line":82,"column":39}},"46":{"start":{"line":83,"column":32},"end":{"line":83,"column":49}},"47":{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},"48":{"start":{"line":85,"column":12},"end":{"line":85,"column":25}},"49":{"start":{"line":87,"column":25},"end":{"line":87,"column":59}},"50":{"start":{"line":88,"column":23},"end":{"line":88,"column":58}},"51":{"start":{"line":89,"column":20},"end":{"line":89,"column":22}},"52":{"start":{"line":90,"column":8},"end":{"line":92,"column":9}},"53":{"start":{"line":91,"column":12},"end":{"line":91,"column":33}},"54":{"start":{"line":93,"column":8},"end":{"line":100,"column":9}},"55":{"start":{"line":94,"column":12},"end":{"line":94,"column":43}},"56":{"start":{"line":97,"column":12},"end":{"line":99,"column":13}},"57":{"start":{"line":98,"column":16},"end":{"line":98,"column":29}},"58":{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},"59":{"start":{"line":102,"column":12},"end":{"line":102,"column":25}},"60":{"start":{"line":104,"column":31},"end":{"line":104,"column":71}},"61":{"start":{"line":105,"column":8},"end":{"line":107,"column":9}},"62":{"start":{"line":106,"column":12},"end":{"line":106,"column":25}},"63":{"start":{"line":108,"column":8},"end":{"line":110,"column":9}},"64":{"start":{"line":109,"column":12},"end":{"line":109,"column":25}},"65":{"start":{"line":111,"column":8},"end":{"line":111,"column":38}},"66":{"start":{"line":112,"column":8},"end":{"line":112,"column":20}},"67":{"start":{"line":115,"column":8},"end":{"line":117,"column":9}},"68":{"start":{"line":116,"column":12},"end":{"line":116,"column":25}},"69":{"start":{"line":118,"column":21},"end":{"line":118,"column":39}},"70":{"start":{"line":119,"column":32},"end":{"line":119,"column":49}},"71":{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},"72":{"start":{"line":121,"column":12},"end":{"line":121,"column":25}},"73":{"start":{"line":123,"column":25},"end":{"line":123,"column":59}},"74":{"start":{"line":124,"column":23},"end":{"line":124,"column":58}},"75":{"start":{"line":125,"column":20},"end":{"line":125,"column":22}},"76":{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},"77":{"start":{"line":127,"column":12},"end":{"line":127,"column":33}},"78":{"start":{"line":129,"column":8},"end":{"line":136,"column":9}},"79":{"start":{"line":130,"column":12},"end":{"line":130,"column":43}},"80":{"start":{"line":133,"column":12},"end":{"line":135,"column":13}},"81":{"start":{"line":134,"column":16},"end":{"line":134,"column":29}},"82":{"start":{"line":137,"column":8},"end":{"line":139,"column":9}},"83":{"start":{"line":138,"column":12},"end":{"line":138,"column":25}},"84":{"start":{"line":140,"column":31},"end":{"line":140,"column":71}},"85":{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},"86":{"start":{"line":142,"column":12},"end":{"line":142,"column":25}},"87":{"start":{"line":144,"column":8},"end":{"line":146,"column":9}},"88":{"start":{"line":145,"column":12},"end":{"line":145,"column":25}},"89":{"start":{"line":147,"column":8},"end":{"line":147,"column":38}},"90":{"start":{"line":148,"column":8},"end":{"line":148,"column":20}},"91":{"start":{"line":152,"column":12},"end":{"line":154,"column":13}},"92":{"start":{"line":153,"column":16},"end":{"line":153,"column":29}},"93":{"start":{"line":155,"column":25},"end":{"line":155,"column":43}},"94":{"start":{"line":156,"column":36},"end":{"line":156,"column":53}},"95":{"start":{"line":157,"column":12},"end":{"line":159,"column":13}},"96":{"start":{"line":158,"column":16},"end":{"line":158,"column":29}},"97":{"start":{"line":160,"column":29},"end":{"line":160,"column":63}},"98":{"start":{"line":161,"column":27},"end":{"line":161,"column":62}},"99":{"start":{"line":162,"column":24},"end":{"line":162,"column":26}},"100":{"start":{"line":163,"column":12},"end":{"line":165,"column":13}},"101":{"start":{"line":164,"column":16},"end":{"line":164,"column":37}},"102":{"start":{"line":166,"column":12},"end":{"line":173,"column":13}},"103":{"start":{"line":167,"column":16},"end":{"line":167,"column":47}},"104":{"start":{"line":170,"column":16},"end":{"line":172,"column":17}},"105":{"start":{"line":171,"column":20},"end":{"line":171,"column":33}},"106":{"start":{"line":174,"column":12},"end":{"line":176,"column":13}},"107":{"start":{"line":175,"column":16},"end":{"line":175,"column":29}},"108":{"start":{"line":177,"column":35},"end":{"line":177,"column":80}},"109":{"start":{"line":178,"column":12},"end":{"line":180,"column":13}},"110":{"start":{"line":179,"column":16},"end":{"line":179,"column":29}},"111":{"start":{"line":181,"column":12},"end":{"line":183,"column":13}},"112":{"start":{"line":182,"column":16},"end":{"line":182,"column":29}},"113":{"start":{"line":184,"column":27},"end":{"line":184,"column":69}},"114":{"start":{"line":185,"column":12},"end":{"line":187,"column":13}},"115":{"start":{"line":186,"column":16},"end":{"line":186,"column":29}},"116":{"start":{"line":188,"column":12},"end":{"line":188,"column":42}},"117":{"start":{"line":189,"column":12},"end":{"line":189,"column":24}},"118":{"start":{"line":193,"column":8},"end":{"line":216,"column":9}},"119":{"start":{"line":194,"column":12},"end":{"line":194,"column":52}},"120":{"start":{"line":196,"column":13},"end":{"line":216,"column":9}},"121":{"start":{"line":197,"column":12},"end":{"line":197,"column":50}},"122":{"start":{"line":199,"column":13},"end":{"line":216,"column":9}},"123":{"start":{"line":200,"column":12},"end":{"line":200,"column":52}},"124":{"start":{"line":202,"column":13},"end":{"line":216,"column":9}},"125":{"start":{"line":203,"column":12},"end":{"line":203,"column":50}},"126":{"start":{"line":205,"column":13},"end":{"line":216,"column":9}},"127":{"start":{"line":206,"column":12},"end":{"line":206,"column":50}},"128":{"start":{"line":208,"column":13},"end":{"line":216,"column":9}},"129":{"start":{"line":209,"column":12},"end":{"line":209,"column":50}},"130":{"start":{"line":211,"column":13},"end":{"line":216,"column":9}},"131":{"start":{"line":212,"column":12},"end":{"line":212,"column":50}},"132":{"start":{"line":214,"column":13},"end":{"line":216,"column":9}},"133":{"start":{"line":215,"column":12},"end":{"line":215,"column":24}},"134":{"start":{"line":217,"column":8},"end":{"line":217,"column":21}},"135":{"start":{"line":220,"column":8},"end":{"line":229,"column":9}},"136":{"start":{"line":221,"column":12},"end":{"line":221,"column":25}},"137":{"start":{"line":224,"column":12},"end":{"line":227,"column":13}},"138":{"start":{"line":225,"column":16},"end":{"line":226,"column":79}},"139":{"start":{"line":228,"column":12},"end":{"line":228,"column":63}},"140":{"start":{"line":232,"column":8},"end":{"line":234,"column":9}},"141":{"start":{"line":233,"column":12},"end":{"line":233,"column":25}},"142":{"start":{"line":235,"column":8},"end":{"line":239,"column":9}},"143":{"start":{"line":236,"column":12},"end":{"line":238,"column":13}},"144":{"start":{"line":237,"column":16},"end":{"line":237,"column":29}},"145":{"start":{"line":240,"column":8},"end":{"line":240,"column":20}},"146":{"start":{"line":243,"column":8},"end":{"line":245,"column":9}},"147":{"start":{"line":244,"column":12},"end":{"line":244,"column":25}},"148":{"start":{"line":246,"column":8},"end":{"line":246,"column":20}},"149":{"start":{"line":249,"column":8},"end":{"line":261,"column":9}},"150":{"start":{"line":250,"column":12},"end":{"line":250,"column":25}},"151":{"start":{"line":252,"column":13},"end":{"line":261,"column":9}},"152":{"start":{"line":253,"column":12},"end":{"line":253,"column":25}},"153":{"start":{"line":256,"column":28},"end":{"line":257,"column":60}},"154":{"start":{"line":258,"column":12},"end":{"line":258,"column":38}},"155":{"start":{"line":259,"column":12},"end":{"line":259,"column":36}},"156":{"start":{"line":260,"column":12},"end":{"line":260,"column":27}},"157":{"start":{"line":264,"column":0},"end":{"line":264,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":26},"end":{"line":9,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":21},"end":{"line":22,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":19},"end":{"line":35,"column":5}},"line":23},"3":{"name":"(anonymous_3)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":21},"end":{"line":41,"column":5}},"line":36},"4":{"name":"(anonymous_4)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":19},"end":{"line":77,"column":5}},"line":42},"5":{"name":"(anonymous_5)","decl":{"start":{"line":78,"column":4},"end":{"line":78,"column":5}},"loc":{"start":{"line":78,"column":19},"end":{"line":113,"column":5}},"line":78},"6":{"name":"(anonymous_6)","decl":{"start":{"line":114,"column":4},"end":{"line":114,"column":5}},"loc":{"start":{"line":114,"column":19},"end":{"line":149,"column":5}},"line":114},"7":{"name":"(anonymous_7)","decl":{"start":{"line":150,"column":4},"end":{"line":150,"column":5}},"loc":{"start":{"line":150,"column":19},"end":{"line":191,"column":5}},"line":150},"8":{"name":"(anonymous_8)","decl":{"start":{"line":192,"column":4},"end":{"line":192,"column":5}},"loc":{"start":{"line":192,"column":35},"end":{"line":218,"column":5}},"line":192},"9":{"name":"(anonymous_9)","decl":{"start":{"line":219,"column":4},"end":{"line":219,"column":5}},"loc":{"start":{"line":219,"column":37},"end":{"line":230,"column":5}},"line":219},"10":{"name":"(anonymous_10)","decl":{"start":{"line":231,"column":4},"end":{"line":231,"column":5}},"loc":{"start":{"line":231,"column":29},"end":{"line":241,"column":5}},"line":231},"11":{"name":"(anonymous_11)","decl":{"start":{"line":242,"column":4},"end":{"line":242,"column":5}},"loc":{"start":{"line":242,"column":34},"end":{"line":247,"column":5}},"line":242},"12":{"name":"(anonymous_12)","decl":{"start":{"line":248,"column":4},"end":{"line":248,"column":5}},"loc":{"start":{"line":248,"column":30},"end":{"line":262,"column":5}},"line":248}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":8},"end":{"line":20,"column":9}},"type":"if","locations":[{"start":{"line":11,"column":8},"end":{"line":20,"column":9}},{"start":{"line":11,"column":8},"end":{"line":20,"column":9}}],"line":11},"1":{"loc":{"start":{"line":16,"column":16},"end":{"line":18,"column":17}},"type":"if","locations":[{"start":{"line":16,"column":16},"end":{"line":18,"column":17}},{"start":{"line":16,"column":16},"end":{"line":18,"column":17}}],"line":16},"2":{"loc":{"start":{"line":24,"column":8},"end":{"line":33,"column":9}},"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":33,"column":9}},{"start":{"line":24,"column":8},"end":{"line":33,"column":9}}],"line":24},"3":{"loc":{"start":{"line":29,"column":16},"end":{"line":31,"column":17}},"type":"if","locations":[{"start":{"line":29,"column":16},"end":{"line":31,"column":17}},{"start":{"line":29,"column":16},"end":{"line":31,"column":17}}],"line":29},"4":{"loc":{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},{"start":{"line":37,"column":8},"end":{"line":39,"column":9}}],"line":37},"5":{"loc":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},{"start":{"line":43,"column":8},"end":{"line":45,"column":9}}],"line":43},"6":{"loc":{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},"type":"if","locations":[{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},{"start":{"line":48,"column":8},"end":{"line":50,"column":9}}],"line":48},"7":{"loc":{"start":{"line":57,"column":8},"end":{"line":64,"column":9}},"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":64,"column":9}},{"start":{"line":57,"column":8},"end":{"line":64,"column":9}}],"line":57},"8":{"loc":{"start":{"line":61,"column":12},"end":{"line":63,"column":13}},"type":"if","locations":[{"start":{"line":61,"column":12},"end":{"line":63,"column":13}},{"start":{"line":61,"column":12},"end":{"line":63,"column":13}}],"line":61},"9":{"loc":{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},{"start":{"line":65,"column":8},"end":{"line":67,"column":9}}],"line":65},"10":{"loc":{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},"type":"if","locations":[{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},{"start":{"line":69,"column":8},"end":{"line":71,"column":9}}],"line":69},"11":{"loc":{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},{"start":{"line":72,"column":8},"end":{"line":74,"column":9}}],"line":72},"12":{"loc":{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},"type":"if","locations":[{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},{"start":{"line":79,"column":8},"end":{"line":81,"column":9}}],"line":79},"13":{"loc":{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},"type":"if","locations":[{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},{"start":{"line":84,"column":8},"end":{"line":86,"column":9}}],"line":84},"14":{"loc":{"start":{"line":93,"column":8},"end":{"line":100,"column":9}},"type":"if","locations":[{"start":{"line":93,"column":8},"end":{"line":100,"column":9}},{"start":{"line":93,"column":8},"end":{"line":100,"column":9}}],"line":93},"15":{"loc":{"start":{"line":97,"column":12},"end":{"line":99,"column":13}},"type":"if","locations":[{"start":{"line":97,"column":12},"end":{"line":99,"column":13}},{"start":{"line":97,"column":12},"end":{"line":99,"column":13}}],"line":97},"16":{"loc":{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},"type":"if","locations":[{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},{"start":{"line":101,"column":8},"end":{"line":103,"column":9}}],"line":101},"17":{"loc":{"start":{"line":105,"column":8},"end":{"line":107,"column":9}},"type":"if","locations":[{"start":{"line":105,"column":8},"end":{"line":107,"column":9}},{"start":{"line":105,"column":8},"end":{"line":107,"column":9}}],"line":105},"18":{"loc":{"start":{"line":108,"column":8},"end":{"line":110,"column":9}},"type":"if","locations":[{"start":{"line":108,"column":8},"end":{"line":110,"column":9}},{"start":{"line":108,"column":8},"end":{"line":110,"column":9}}],"line":108},"19":{"loc":{"start":{"line":115,"column":8},"end":{"line":117,"column":9}},"type":"if","locations":[{"start":{"line":115,"column":8},"end":{"line":117,"column":9}},{"start":{"line":115,"column":8},"end":{"line":117,"column":9}}],"line":115},"20":{"loc":{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},"type":"if","locations":[{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},{"start":{"line":120,"column":8},"end":{"line":122,"column":9}}],"line":120},"21":{"loc":{"start":{"line":129,"column":8},"end":{"line":136,"column":9}},"type":"if","locations":[{"start":{"line":129,"column":8},"end":{"line":136,"column":9}},{"start":{"line":129,"column":8},"end":{"line":136,"column":9}}],"line":129},"22":{"loc":{"start":{"line":133,"column":12},"end":{"line":135,"column":13}},"type":"if","locations":[{"start":{"line":133,"column":12},"end":{"line":135,"column":13}},{"start":{"line":133,"column":12},"end":{"line":135,"column":13}}],"line":133},"23":{"loc":{"start":{"line":137,"column":8},"end":{"line":139,"column":9}},"type":"if","locations":[{"start":{"line":137,"column":8},"end":{"line":139,"column":9}},{"start":{"line":137,"column":8},"end":{"line":139,"column":9}}],"line":137},"24":{"loc":{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},"type":"if","locations":[{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},{"start":{"line":141,"column":8},"end":{"line":143,"column":9}}],"line":141},"25":{"loc":{"start":{"line":144,"column":8},"end":{"line":146,"column":9}},"type":"if","locations":[{"start":{"line":144,"column":8},"end":{"line":146,"column":9}},{"start":{"line":144,"column":8},"end":{"line":146,"column":9}}],"line":144},"26":{"loc":{"start":{"line":152,"column":12},"end":{"line":154,"column":13}},"type":"if","locations":[{"start":{"line":152,"column":12},"end":{"line":154,"column":13}},{"start":{"line":152,"column":12},"end":{"line":154,"column":13}}],"line":152},"27":{"loc":{"start":{"line":157,"column":12},"end":{"line":159,"column":13}},"type":"if","locations":[{"start":{"line":157,"column":12},"end":{"line":159,"column":13}},{"start":{"line":157,"column":12},"end":{"line":159,"column":13}}],"line":157},"28":{"loc":{"start":{"line":166,"column":12},"end":{"line":173,"column":13}},"type":"if","locations":[{"start":{"line":166,"column":12},"end":{"line":173,"column":13}},{"start":{"line":166,"column":12},"end":{"line":173,"column":13}}],"line":166},"29":{"loc":{"start":{"line":170,"column":16},"end":{"line":172,"column":17}},"type":"if","locations":[{"start":{"line":170,"column":16},"end":{"line":172,"column":17}},{"start":{"line":170,"column":16},"end":{"line":172,"column":17}}],"line":170},"30":{"loc":{"start":{"line":174,"column":12},"end":{"line":176,"column":13}},"type":"if","locations":[{"start":{"line":174,"column":12},"end":{"line":176,"column":13}},{"start":{"line":174,"column":12},"end":{"line":176,"column":13}}],"line":174},"31":{"loc":{"start":{"line":178,"column":12},"end":{"line":180,"column":13}},"type":"if","locations":[{"start":{"line":178,"column":12},"end":{"line":180,"column":13}},{"start":{"line":178,"column":12},"end":{"line":180,"column":13}}],"line":178},"32":{"loc":{"start":{"line":181,"column":12},"end":{"line":183,"column":13}},"type":"if","locations":[{"start":{"line":181,"column":12},"end":{"line":183,"column":13}},{"start":{"line":181,"column":12},"end":{"line":183,"column":13}}],"line":181},"33":{"loc":{"start":{"line":185,"column":12},"end":{"line":187,"column":13}},"type":"if","locations":[{"start":{"line":185,"column":12},"end":{"line":187,"column":13}},{"start":{"line":185,"column":12},"end":{"line":187,"column":13}}],"line":185},"34":{"loc":{"start":{"line":193,"column":8},"end":{"line":216,"column":9}},"type":"if","locations":[{"start":{"line":193,"column":8},"end":{"line":216,"column":9}},{"start":{"line":193,"column":8},"end":{"line":216,"column":9}}],"line":193},"35":{"loc":{"start":{"line":196,"column":13},"end":{"line":216,"column":9}},"type":"if","locations":[{"start":{"line":196,"column":13},"end":{"line":216,"column":9}},{"start":{"line":196,"column":13},"end":{"line":216,"column":9}}],"line":196},"36":{"loc":{"start":{"line":199,"column":13},"end":{"line":216,"column":9}},"type":"if","locations":[{"start":{"line":199,"column":13},"end":{"line":216,"column":9}},{"start":{"line":199,"column":13},"end":{"line":216,"column":9}}],"line":199},"37":{"loc":{"start":{"line":202,"column":13},"end":{"line":216,"column":9}},"type":"if","locations":[{"start":{"line":202,"column":13},"end":{"line":216,"column":9}},{"start":{"line":202,"column":13},"end":{"line":216,"column":9}}],"line":202},"38":{"loc":{"start":{"line":205,"column":13},"end":{"line":216,"column":9}},"type":"if","locations":[{"start":{"line":205,"column":13},"end":{"line":216,"column":9}},{"start":{"line":205,"column":13},"end":{"line":216,"column":9}}],"line":205},"39":{"loc":{"start":{"line":208,"column":13},"end":{"line":216,"column":9}},"type":"if","locations":[{"start":{"line":208,"column":13},"end":{"line":216,"column":9}},{"start":{"line":208,"column":13},"end":{"line":216,"column":9}}],"line":208},"40":{"loc":{"start":{"line":211,"column":13},"end":{"line":216,"column":9}},"type":"if","locations":[{"start":{"line":211,"column":13},"end":{"line":216,"column":9}},{"start":{"line":211,"column":13},"end":{"line":216,"column":9}}],"line":211},"41":{"loc":{"start":{"line":214,"column":13},"end":{"line":216,"column":9}},"type":"if","locations":[{"start":{"line":214,"column":13},"end":{"line":216,"column":9}},{"start":{"line":214,"column":13},"end":{"line":216,"column":9}}],"line":214},"42":{"loc":{"start":{"line":220,"column":8},"end":{"line":229,"column":9}},"type":"if","locations":[{"start":{"line":220,"column":8},"end":{"line":229,"column":9}},{"start":{"line":220,"column":8},"end":{"line":229,"column":9}}],"line":220},"43":{"loc":{"start":{"line":224,"column":12},"end":{"line":227,"column":13}},"type":"if","locations":[{"start":{"line":224,"column":12},"end":{"line":227,"column":13}},{"start":{"line":224,"column":12},"end":{"line":227,"column":13}}],"line":224},"44":{"loc":{"start":{"line":225,"column":23},"end":{"line":226,"column":78}},"type":"binary-expr","locations":[{"start":{"line":225,"column":23},"end":{"line":225,"column":64}},{"start":{"line":226,"column":20},"end":{"line":226,"column":78}}],"line":225},"45":{"loc":{"start":{"line":232,"column":8},"end":{"line":234,"column":9}},"type":"if","locations":[{"start":{"line":232,"column":8},"end":{"line":234,"column":9}},{"start":{"line":232,"column":8},"end":{"line":234,"column":9}}],"line":232},"46":{"loc":{"start":{"line":236,"column":12},"end":{"line":238,"column":13}},"type":"if","locations":[{"start":{"line":236,"column":12},"end":{"line":238,"column":13}},{"start":{"line":236,"column":12},"end":{"line":238,"column":13}}],"line":236},"47":{"loc":{"start":{"line":243,"column":8},"end":{"line":245,"column":9}},"type":"if","locations":[{"start":{"line":243,"column":8},"end":{"line":245,"column":9}},{"start":{"line":243,"column":8},"end":{"line":245,"column":9}}],"line":243},"48":{"loc":{"start":{"line":249,"column":8},"end":{"line":261,"column":9}},"type":"if","locations":[{"start":{"line":249,"column":8},"end":{"line":261,"column":9}},{"start":{"line":249,"column":8},"end":{"line":261,"column":9}}],"line":249},"49":{"loc":{"start":{"line":252,"column":13},"end":{"line":261,"column":9}},"type":"if","locations":[{"start":{"line":252,"column":13},"end":{"line":261,"column":9}},{"start":{"line":252,"column":13},"end":{"line":261,"column":9}}],"line":252},"50":{"loc":{"start":{"line":256,"column":28},"end":{"line":257,"column":60}},"type":"binary-expr","locations":[{"start":{"line":256,"column":28},"end":{"line":256,"column":69}},{"start":{"line":257,"column":16},"end":{"line":257,"column":60}}],"line":256}},"s":{"0":1,"1":11,"2":11,"3":11,"4":11,"5":1,"6":10,"7":21,"8":4,"9":6,"10":12,"11":1,"12":11,"13":17,"14":8,"15":3,"16":0,"17":0,"18":0,"19":12,"20":0,"21":12,"22":12,"23":12,"24":0,"25":12,"26":12,"27":12,"28":12,"29":12,"30":12,"31":11,"32":1,"33":0,"34":12,"35":0,"36":12,"37":12,"38":1,"39":11,"40":0,"41":11,"42":11,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":7,"68":0,"69":7,"70":7,"71":7,"72":0,"73":7,"74":7,"75":7,"76":7,"77":7,"78":7,"79":0,"80":7,"81":0,"82":7,"83":0,"84":7,"85":7,"86":1,"87":6,"88":1,"89":5,"90":5,"91":22,"92":1,"93":21,"94":21,"95":21,"96":1,"97":20,"98":20,"99":20,"100":20,"101":20,"102":20,"103":12,"104":8,"105":1,"106":19,"107":1,"108":18,"109":18,"110":1,"111":17,"112":2,"113":15,"114":15,"115":1,"116":14,"117":14,"118":65,"119":11,"120":54,"121":12,"122":42,"123":0,"124":42,"125":12,"126":30,"127":0,"128":30,"129":7,"130":23,"131":22,"132":1,"133":0,"134":1,"135":13,"136":1,"137":12,"138":11,"139":1,"140":12,"141":1,"142":11,"143":20,"144":10,"145":1,"146":1,"147":1,"148":0,"149":30,"150":2,"151":28,"152":1,"153":27,"154":27,"155":27,"156":27,"157":1},"f":{"0":11,"1":11,"2":12,"3":0,"4":12,"5":0,"6":7,"7":22,"8":65,"9":13,"10":12,"11":1,"12":30},"b":{"0":[1,10],"1":[4,17],"2":[1,11],"3":[8,9],"4":[0,0],"5":[0,12],"6":[0,12],"7":[11,1],"8":[0,1],"9":[0,12],"10":[1,11],"11":[0,11],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,7],"20":[0,7],"21":[0,7],"22":[0,7],"23":[0,7],"24":[1,6],"25":[1,5],"26":[1,21],"27":[1,20],"28":[12,8],"29":[1,7],"30":[1,18],"31":[1,17],"32":[2,15],"33":[1,14],"34":[11,54],"35":[12,42],"36":[0,42],"37":[12,30],"38":[0,30],"39":[7,23],"40":[22,1],"41":[0,1],"42":[1,12],"43":[11,1],"44":[11,1],"45":[1,11],"46":[10,10],"47":[1,0],"48":[2,28],"49":[1,27],"50":[27,13]},"inputSourceMap":{"version":3,"file":"/Users/tony/IdeaProjects/project_team122/src/controller/QueryModel.ts","sources":["/Users/tony/IdeaProjects/project_team122/src/controller/QueryModel.ts"],"names":[],"mappings":";;AA0BA,MAAqB,eAAe;IAE3B,QAAQ,CAAmB;IAC5B,cAAc,GAAW,GAAG,CAAC;IAC7B,aAAa,GAAa,EAAE,CAAC;IACpC,YAAY,QAA0B;QACrC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC1B,CAAC;IAEM,WAAW,CAAC,GAAY;QAC9B,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;YACrB,OAAO,KAAK,CAAC;SACb;aAAM;YACN,KAAK,MAAM,IAAI,IAAI,GAAG,EAAE;gBACvB,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE;oBACnC,OAAO,KAAK,CAAC;iBACb;aACD;SACD;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IAEM,UAAU,CAAC,EAAW;QAC5B,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE;YACpB,OAAO,KAAK,CAAC;SACb;aAAM;YACN,KAAK,MAAM,IAAI,IAAI,EAAE,EAAE;gBACtB,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE;oBACnC,OAAO,KAAK,CAAC;iBACb;aACD;SACD;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IAEM,WAAW,CAAC,GAAU;QAC5B,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YAClC,OAAO,KAAK,CAAC;SACb;QACD,OAAO,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;IACrC,CAAC;IAEM,UAAU,CAAC,EAAU;QAC3B,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YACjC,OAAO,KAAK,CAAC;SACb;QACD,MAAM,IAAI,GAAW,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACxC,MAAM,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC1C,IAAI,eAAe,KAAK,CAAC,CAAC,EAAE;YAC3B,OAAO,KAAK,CAAC;SACb;QACD,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;QACpD,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC;QACnD,MAAM,GAAG,GAAa,EAAE,CAAC;QACzB,KAAK,IAAI,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAE;YAClC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;SACrB;QACD,IAAI,IAAI,CAAC,cAAc,KAAK,GAAG,EAAE;YAChC,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;SAC/B;aAAM;YACN,IAAI,IAAI,CAAC,cAAc,KAAK,QAAQ,EAAE;gBACrC,OAAO,KAAK,CAAC;aACb;SACD;QACD,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;YAC5B,OAAO,KAAK,CAAC;SACb;QACD,MAAM,cAAc,GAAa,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;QAC1E,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YACrC,OAAO,KAAK,CAAC;SACb;QACD,IAAI,OAAQ,EAAU,CAAC,IAAI,CAAC,KAAK,QAAQ,EAAE;YAC1C,OAAO,KAAK,CAAC;SACb;QACD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9B,OAAO,IAAI,CAAC;IACb,CAAC;IAEM,UAAU,CAAC,EAAU;QAC3B,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YACjC,OAAO,KAAK,CAAC;SACb;QACD,MAAM,IAAI,GAAW,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACxC,MAAM,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC1C,IAAI,eAAe,KAAK,CAAC,CAAC,EAAE;YAC3B,OAAO,KAAK,CAAC;SACb;QACD,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;QACpD,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC;QACnD,MAAM,GAAG,GAAa,EAAE,CAAC;QACzB,KAAK,IAAI,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAE;YAClC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;SACrB;QACD,IAAI,IAAI,CAAC,cAAc,KAAK,GAAG,EAAE;YAChC,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;SAC/B;aAAM;YACN,IAAI,IAAI,CAAC,cAAc,KAAK,QAAQ,EAAE;gBACrC,OAAO,KAAK,CAAC;aACb;SACD;QACD,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;YAC5B,OAAO,KAAK,CAAC;SACb;QACD,MAAM,cAAc,GAAa,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;QAC1E,IAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YACpC,OAAO,KAAK,CAAC;SACb;QACD,IAAI,OAAQ,EAAU,CAAC,IAAI,CAAC,KAAK,QAAQ,EAAE;YAC1C,OAAO,KAAK,CAAC;SACb;QACD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9B,OAAO,IAAI,CAAC;IACb,CAAC;IAEM,UAAU,CAAC,EAAU;QAC3B,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YACjC,OAAO,KAAK,CAAC;SACb;QACD,MAAM,IAAI,GAAW,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACxC,MAAM,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC1C,IAAI,eAAe,KAAK,CAAC,CAAC,EAAE;YAC3B,OAAO,KAAK,CAAC;SACb;QACD,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;QACpD,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC;QACnD,MAAM,GAAG,GAAa,EAAE,CAAC;QACzB,KAAK,IAAI,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAE;YAClC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;SACrB;QACD,IAAI,IAAI,CAAC,cAAc,KAAK,GAAG,EAAE;YAChC,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;SAC/B;aAAM;YACN,IAAI,IAAI,CAAC,cAAc,KAAK,QAAQ,EAAE;gBACrC,OAAO,KAAK,CAAC;aACb;SACD;QACD,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;YAC5B,OAAO,KAAK,CAAC;SACb;QACD,MAAM,cAAc,GAAa,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;QAC1E,IAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YACpC,OAAO,KAAK,CAAC;SACb;QACD,IAAI,OAAQ,EAAU,CAAC,IAAI,CAAC,KAAK,QAAQ,EAAE;YAC1C,OAAO,KAAK,CAAC;SACb;QACD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9B,OAAO,IAAI,CAAC;IACb,CAAC;IAEM,UAAU,CAAC,EAAU;QAC3B;YACC,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;gBACjC,OAAO,KAAK,CAAC;aACb;YACD,MAAM,IAAI,GAAW,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACxC,MAAM,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAC1C,IAAI,eAAe,KAAK,CAAC,CAAC,EAAE;gBAC3B,OAAO,KAAK,CAAC;aACb;YACD,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;YACpD,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC;YACnD,MAAM,GAAG,GAAa,EAAE,CAAC;YACzB,KAAK,IAAI,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAClC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;aACrB;YACD,IAAI,IAAI,CAAC,cAAc,KAAK,GAAG,EAAE;gBAChC,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;aAC/B;iBAAM;gBACN,IAAI,IAAI,CAAC,cAAc,KAAK,QAAQ,EAAE;oBACrC,OAAO,KAAK,CAAC;iBACb;aACD;YACD,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;gBAC5B,OAAO,KAAK,CAAC;aACb;YACD,MAAM,cAAc,GAAa,CAAC,MAAM,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;YAC/E,IAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;gBACpC,OAAO,KAAK,CAAC;aACb;YACD,IAAI,OAAQ,EAAU,CAAC,IAAI,CAAC,KAAK,QAAQ,EAAE;gBAC1C,OAAO,KAAK,CAAC;aACb;YACD,MAAM,MAAM,GAAY,EAAU,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,EAAG,EAAU,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACpF,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;gBAC/B,OAAO,KAAK,CAAC;aACb;YACD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC9B,OAAO,IAAI,CAAC;SACZ;IACF,CAAC;IAEM,kBAAkB,CAAC,UAAiB;QAC1C,IAAI,UAAU,CAAC,GAAG,KAAK,SAAS,EAAE;YACjC,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;SACxC;aAAM,IAAI,UAAU,CAAC,EAAE,KAAK,SAAS,EAAE;YACvC,OAAO,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;SACtC;aAAM,IAAI,UAAU,CAAC,GAAG,KAAK,SAAS,EAAE;YACxC,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;SACxC;aAAM,IAAI,UAAU,CAAC,EAAE,KAAK,SAAS,EAAE;YACvC,OAAO,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;SACtC;aAAM,IAAI,UAAU,CAAC,EAAE,KAAK,SAAS,EAAE;YACvC,OAAO,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;SACtC;aAAM,IAAI,UAAU,CAAC,EAAE,KAAK,SAAS,EAAE;YACvC,OAAO,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;SACtC;aAAM,IAAI,UAAU,CAAC,EAAE,KAAK,SAAS,EAAE;YACvC,OAAO,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;SACtC;aAAM,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YAChD,OAAO,IAAI,CAAC;SACZ;QACD,OAAO,KAAK,CAAC;IACd,CAAC;IAEM,mBAAmB,CAAC,WAAmB;QAC7C,IAAI,WAAW,CAAC,OAAO,KAAK,SAAS,EAAE;YACtC,OAAO,KAAK,CAAC;SACb;aAAM;YACN,IAAI,WAAW,CAAC,KAAK,KAAK,SAAS,EAAE;gBACpC,OAAO,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC;oBAC/C,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,KAAK,EAAE,WAAW,CAAC,OAAO,CAAC,CAAC;aAC5D;YACD,OAAO,IAAI,CAAC,eAAe,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;SAEnD;IACF,CAAC;IAEM,eAAe,CAAC,OAAiB;QACvC,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACzB,OAAO,KAAK,CAAC;SACb;QACD,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;YAC7B,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;gBACzC,OAAO,KAAK,CAAC;aACb;SACD;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IAEM,aAAa,CAAC,KAAa,EAAE,OAAiB;QACpD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;YAC7B,OAAO,KAAK,CAAC;SACb;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IAEM,aAAa,CAAC,UAAiB;QACrC,IAAG,UAAU,CAAC,KAAK,IAAI,IAAI,EAAE;YAC5B,OAAO,KAAK,CAAC;SACb;aAAM,IAAG,UAAU,CAAC,OAAO,IAAI,IAAI,EAAE;YACrC,OAAO,KAAK,CAAC;SACb;aAAM;YACN,MAAM,OAAO,GAAY,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,KAAK,CAAC;gBACjE,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YAC9C,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;YAC1B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACxB,OAAO,OAAO,CAAC;SACf;IACF,CAAC;CACD;AAlQD,kCAkQC","sourcesContent":["import {InsightDataset} from \"./IInsightFacade\";\n\nexport interface Query {\n\tWHERE: Where;\n\tOPTIONS: Option;\n}\n\nexport interface Where {\n\tOR?: Where[];\n\tAND?: Where[];\n\tNOT?: Where;\n\tGT?: object;\n\tLT?: object;\n\tEQ?: object;\n\tIS?: object;\n}\n\nexport interface Negation {\n\tcondition: Where;\n}\n\nexport interface Option {\n\tCOLUMNS: string[];\n\tORDER?: string;\n}\n\nexport default class HelperFunctions{\n\n\tprivate datasets: InsightDataset[];\n\tpublic initialMorSKey: string = \"_\";\n\tpublic listOfMorSKey: string[] = [];\n\tconstructor(datasets: InsightDataset[]) {\n\t\tthis.datasets = datasets;\n\t}\n\n\tpublic validateAnd(AND: Where[]) {\n\t\tif (AND.length === 0) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\tfor (const item of AND) {\n\t\t\t\tif (!this.validateQueryWhere(item)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic validateOr(OR: Where[]): boolean {\n\t\tif (OR.length === 0) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\tfor (const item of OR) {\n\t\t\t\tif (!this.validateQueryWhere(item)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic validateNot(NOT: Where): boolean {\n\t\tif (Object.keys(NOT).length !== 1) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.validateQueryWhere(NOT);\n\t}\n\n\tpublic validateGT(GT: object) {\n\t\tif (Object.keys(GT).length !== 1) {\n\t\t\treturn false;\n\t\t}\n\t\tconst mKey: string = Object.keys(GT)[0];\n\t\tconst underscoreIndex = mKey.indexOf(\"_\");\n\t\tif (underscoreIndex === -1) {\n\t\t\treturn false;\n\t\t}\n\t\tconst idString = mKey.substring(0, underscoreIndex);\n\t\tconst mField = mKey.substring(underscoreIndex + 1);\n\t\tconst ids: string[] = [];\n\t\tfor (let dataset of this.datasets) {\n\t\t\tids.push(dataset.id);\n\t\t}\n\t\tif (this.initialMorSKey === \"_\") {\n\t\t\tthis.initialMorSKey = idString;\n\t\t} else {\n\t\t\tif (this.initialMorSKey !== idString) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (!ids.includes(idString)) {\n\t\t\treturn false;\n\t\t}\n\t\tconst possibleMField: string[] = [\"avg\", \"pass\", \"fail\", \"audit\", \"year\"];\n\t\tif (!possibleMField.includes(mField)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof (GT as any)[mKey] !== \"number\") {\n\t\t\treturn false;\n\t\t}\n\t\tthis.listOfMorSKey.push(mKey);\n\t\treturn true;\n\t}\n\n\tpublic validateLT(LT: object) {\n\t\tif (Object.keys(LT).length !== 1) {\n\t\t\treturn false;\n\t\t}\n\t\tconst mKey: string = Object.keys(LT)[0];\n\t\tconst underscoreIndex = mKey.indexOf(\"_\");\n\t\tif (underscoreIndex === -1) {\n\t\t\treturn false;\n\t\t}\n\t\tconst idString = mKey.substring(0, underscoreIndex);\n\t\tconst mField = mKey.substring(underscoreIndex + 1);\n\t\tconst ids: string[] = [];\n\t\tfor (let dataset of this.datasets) {\n\t\t\tids.push(dataset.id);\n\t\t}\n\t\tif (this.initialMorSKey === \"_\") {\n\t\t\tthis.initialMorSKey = idString;\n\t\t} else {\n\t\t\tif (this.initialMorSKey !== idString) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (!ids.includes(idString)) {\n\t\t\treturn false;\n\t\t}\n\t\tconst possibleMField: string[] = [\"avg\", \"pass\", \"fail\", \"audit\", \"year\"];\n\t\tif(!possibleMField.includes(mField)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof (LT as any)[mKey] !== \"number\") {\n\t\t\treturn false;\n\t\t}\n\t\tthis.listOfMorSKey.push(mKey);\n\t\treturn true;\n\t}\n\n\tpublic validateEQ(EQ: object) {\n\t\tif (Object.keys(EQ).length !== 1) {\n\t\t\treturn false;\n\t\t}\n\t\tconst mKey: string = Object.keys(EQ)[0];\n\t\tconst underscoreIndex = mKey.indexOf(\"_\");\n\t\tif (underscoreIndex === -1) {\n\t\t\treturn false;\n\t\t}\n\t\tconst idString = mKey.substring(0, underscoreIndex);\n\t\tconst mField = mKey.substring(underscoreIndex + 1);\n\t\tconst ids: string[] = [];\n\t\tfor (let dataset of this.datasets) {\n\t\t\tids.push(dataset.id);\n\t\t}\n\t\tif (this.initialMorSKey === \"_\") {\n\t\t\tthis.initialMorSKey = idString;\n\t\t} else {\n\t\t\tif (this.initialMorSKey !== idString) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (!ids.includes(idString)) {\n\t\t\treturn false;\n\t\t}\n\t\tconst possibleMField: string[] = [\"avg\", \"pass\", \"fail\", \"audit\", \"year\"];\n\t\tif(!possibleMField.includes(mField)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof (EQ as any)[mKey] !== \"number\") {\n\t\t\treturn false;\n\t\t}\n\t\tthis.listOfMorSKey.push(mKey);\n\t\treturn true;\n\t}\n\n\tpublic validateIS(IS: object) {\n\t\t{\n\t\t\tif (Object.keys(IS).length !== 1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst sKey: string = Object.keys(IS)[0];\n\t\t\tconst underscoreIndex = sKey.indexOf(\"_\");\n\t\t\tif (underscoreIndex === -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst idString = sKey.substring(0, underscoreIndex);\n\t\t\tconst sField = sKey.substring(underscoreIndex + 1);\n\t\t\tconst ids: string[] = [];\n\t\t\tfor (let dataset of this.datasets) {\n\t\t\t\tids.push(dataset.id);\n\t\t\t}\n\t\t\tif (this.initialMorSKey === \"_\") {\n\t\t\t\tthis.initialMorSKey = idString;\n\t\t\t} else {\n\t\t\t\tif (this.initialMorSKey !== idString) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!ids.includes(idString)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst possibleSField: string[] = [\"dept\", \"id\", \"instructor\", \"title\", \"uuid\"];\n\t\t\tif(!possibleSField.includes(sField)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (typeof (IS as any)[sKey] !== \"string\") {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst sValue: string = (IS as any)[sKey].substring(1, (IS as any)[sKey].length - 1);\n\t\t\tif (sValue.indexOf(\"*\") !== -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis.listOfMorSKey.push(sKey);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic validateQueryWhere(whereBlock: Where): boolean {\n\t\tif (whereBlock.AND !== undefined) {\n\t\t\treturn this.validateAnd(whereBlock.AND);\n\t\t} else if (whereBlock.OR !== undefined) {\n\t\t\treturn this.validateOr(whereBlock.OR);\n\t\t} else if (whereBlock.NOT !== undefined) {\n\t\t\treturn this.validateNot(whereBlock.NOT);\n\t\t} else if (whereBlock.GT !== undefined) {\n\t\t\treturn this.validateGT(whereBlock.GT);\n\t\t} else if (whereBlock.LT !== undefined) {\n\t\t\treturn this.validateLT(whereBlock.LT);\n\t\t} else if (whereBlock.EQ !== undefined) {\n\t\t\treturn this.validateEQ(whereBlock.EQ);\n\t\t} else if (whereBlock.IS !== undefined) {\n\t\t\treturn this.validateIS(whereBlock.IS);\n\t\t} else if (Object.keys(whereBlock).length === 0) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic validateQueryOption(optionBlock: Option): boolean {\n\t\tif (optionBlock.COLUMNS === undefined) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\tif (optionBlock.ORDER !== undefined) {\n\t\t\t\treturn this.validateColumns(optionBlock.COLUMNS) &&\n\t\t\t\t\tthis.validateOrder(optionBlock.ORDER, optionBlock.COLUMNS);\n\t\t\t}\n\t\t\treturn this.validateColumns((optionBlock.COLUMNS));\n\t\t\t// eslint-disable-next-line max-lines\n\t\t}\n\t}\n\n\tpublic validateColumns(COLUMNS: string[]): boolean {\n\t\tif (COLUMNS.length === 0) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (const column of COLUMNS) {\n\t\t\tif (!this.listOfMorSKey.includes(column)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic validateOrder(Order: string, COLUMNS: string[]): boolean {\n\t\tif (!COLUMNS.includes(Order)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic validateQuery(queryModel: Query) {\n\t\tif(queryModel.WHERE == null) {\n\t\t\treturn false;\n\t\t} else if(queryModel.OPTIONS == null) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\tconst isValid: boolean = this.validateQueryWhere(queryModel.WHERE) &&\n\t\t\t\tthis.validateQueryOption(queryModel.OPTIONS);\n\t\t\tthis.initialMorSKey = \"_\";\n\t\t\tthis.listOfMorSKey = [];\n\t\t\treturn isValid;\n\t\t}\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"bb9747fc64d39daf8688eab1004e98236d427895","contentHash":"58d485e7b437e61170574f9fc6af5233dbb5cd420ab6db99bf2aba0c92f7e7ec"}}