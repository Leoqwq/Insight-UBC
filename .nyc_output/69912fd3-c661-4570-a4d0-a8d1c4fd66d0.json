{"/Users/tony/IdeaProjects/project_team122/src/controller/IInsightFacade.ts":{"path":"/Users/tony/IdeaProjects/project_team122/src/controller/IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":49,"6":49,"7":1,"8":1,"9":1,"10":1,"11":2,"12":2,"13":1},"f":{"0":1,"1":49,"2":1,"3":2},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/tony/IdeaProjects/project_team122/src/controller/IInsightFacade.ts","sources":["/Users/tony/IdeaProjects/project_team122/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,2CAAqB,CAAA;IACrB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAYD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\n * This is the primary high-level API for the project. In this folder there should be:\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\n * You should not change this interface at all or the test suite will not work.\n */\n\nexport enum InsightDatasetKind {\n\tSections = \"sections\",\n\tRooms = \"rooms\",\n}\n\nexport interface InsightDataset {\n\tid: string;\n\tkind: InsightDatasetKind;\n\tnumRows: number;\n}\n\nexport interface InsightResult {\n\t[key: string]: string | number;\n}\n\nexport class InsightError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, InsightError);\n\t}\n}\n\nexport class NotFoundError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, NotFoundError);\n\t}\n}\n\nexport class ResultTooLargeError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, ResultTooLargeError);\n\t}\n}\n\nexport interface IInsightFacade {\n\t/**\n\t * Add a dataset to insightUBC.\n\t *\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\n\t * @param kind  The kind of the dataset\n\t *\n\t * @return Promise <string[]>\n\t *\n\t * The promise should fulfill on a successful add, reject for any failures.\n\t * The promise should fulfill with a string array,\n\t * containing the ids of all currently added datasets upon a successful add.\n\t * The promise should reject with an InsightError describing the error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\n\t *\n\t * After receiving the dataset, it should be processed into a data structure of\n\t * your design. The processed data structure should be persisted to disk; your\n\t * system should be able to load this persisted value into memory for answering\n\t * queries.\n\t *\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\n\t * be successfully answered.\n\t */\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\n\n\t/**\n\t * Remove a dataset from insightUBC.\n\t *\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\n\t *\n\t * @return Promise <string>\n\t *\n\t * The promise should fulfill upon a successful removal, reject on any error.\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t *\n\t * The promise should fulfill the id of the dataset that was removed.\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\n\t *\n\t * This will delete both disk and memory caches for the dataset for the id meaning\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\n\t */\n\tremoveDataset(id: string): Promise<string>;\n\n\t/**\n\t * Perform a query on insightUBC.\n\t *\n\t * @param query  The query to be performed.\n\t *\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\n\t * or references multiple datasets, it should be rejected.\n\t *\n\t * @return Promise <InsightResult[]>\n\t *\n\t * The promise should fulfill with an array of results.\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\n\t * or an InsightError (for any other source of failure) describing the error.\n\t */\n\tperformQuery(query: unknown): Promise<InsightResult[]>;\n\n\t/**\n\t * List all currently added datasets, their types, and number of rows.\n\t *\n\t * @return Promise <InsightDataset[]>\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\n\t */\n\tlistDatasets(): Promise<InsightDataset[]>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8494880c5d0df7fccc3d574874da26b7e583f11a","contentHash":"e5e3818333a1769a7dcad01c67978656acb290f7837295242e0e65ccd100f308"},"/Users/tony/IdeaProjects/project_team122/src/controller/InsightFacade.ts":{"path":"/Users/tony/IdeaProjects/project_team122/src/controller/InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"25":{"start":{"line":26,"column":4},"end":{"line":26,"column":62}},"26":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}},"27":{"start":{"line":29,"column":0},"end":{"line":29,"column":25}},"28":{"start":{"line":30,"column":25},"end":{"line":30,"column":52}},"29":{"start":{"line":31,"column":16},"end":{"line":31,"column":49}},"30":{"start":{"line":32,"column":11},"end":{"line":32,"column":44}},"31":{"start":{"line":33,"column":15},"end":{"line":33,"column":47}},"32":{"start":{"line":34,"column":21},"end":{"line":34,"column":61}},"33":{"start":{"line":35,"column":28},"end":{"line":35,"column":75}},"34":{"start":{"line":48,"column":8},"end":{"line":48,"column":25}},"35":{"start":{"line":49,"column":8},"end":{"line":49,"column":21}},"36":{"start":{"line":50,"column":8},"end":{"line":50,"column":27}},"37":{"start":{"line":51,"column":8},"end":{"line":51,"column":37}},"38":{"start":{"line":52,"column":8},"end":{"line":52,"column":25}},"39":{"start":{"line":53,"column":8},"end":{"line":53,"column":25}},"40":{"start":{"line":54,"column":8},"end":{"line":54,"column":23}},"41":{"start":{"line":55,"column":8},"end":{"line":55,"column":25}},"42":{"start":{"line":56,"column":8},"end":{"line":56,"column":25}},"43":{"start":{"line":57,"column":8},"end":{"line":57,"column":27}},"44":{"start":{"line":60,"column":0},"end":{"line":60,"column":26}},"45":{"start":{"line":63,"column":14},"end":{"line":63,"column":22}},"46":{"start":{"line":67,"column":8},"end":{"line":67,"column":27}},"47":{"start":{"line":68,"column":8},"end":{"line":68,"column":49}},"48":{"start":{"line":69,"column":8},"end":{"line":69,"column":73}},"49":{"start":{"line":70,"column":8},"end":{"line":70,"column":67}},"50":{"start":{"line":73,"column":8},"end":{"line":75,"column":9}},"51":{"start":{"line":74,"column":12},"end":{"line":74,"column":66}},"52":{"start":{"line":76,"column":8},"end":{"line":80,"column":9}},"53":{"start":{"line":77,"column":12},"end":{"line":79,"column":13}},"54":{"start":{"line":78,"column":16},"end":{"line":78,"column":99}},"55":{"start":{"line":81,"column":25},"end":{"line":81,"column":59}},"56":{"start":{"line":82,"column":8},"end":{"line":82,"column":41}},"57":{"start":{"line":83,"column":25},"end":{"line":83,"column":72}},"58":{"start":{"line":84,"column":8},"end":{"line":84,"column":63}},"59":{"start":{"line":85,"column":8},"end":{"line":89,"column":11}},"60":{"start":{"line":90,"column":20},"end":{"line":90,"column":22}},"61":{"start":{"line":91,"column":8},"end":{"line":93,"column":9}},"62":{"start":{"line":92,"column":12},"end":{"line":92,"column":33}},"63":{"start":{"line":94,"column":8},"end":{"line":94,"column":19}},"64":{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},"65":{"start":{"line":98,"column":12},"end":{"line":98,"column":66}},"66":{"start":{"line":100,"column":29},"end":{"line":100,"column":84}},"67":{"start":{"line":100,"column":66},"end":{"line":100,"column":83}},"68":{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},"69":{"start":{"line":102,"column":12},"end":{"line":102,"column":74}},"70":{"start":{"line":104,"column":8},"end":{"line":112,"column":9}},"71":{"start":{"line":105,"column":12},"end":{"line":105,"column":50}},"72":{"start":{"line":106,"column":29},"end":{"line":106,"column":76}},"73":{"start":{"line":107,"column":12},"end":{"line":107,"column":38}},"74":{"start":{"line":108,"column":12},"end":{"line":108,"column":22}},"75":{"start":{"line":111,"column":12},"end":{"line":111,"column":104}},"76":{"start":{"line":115,"column":8},"end":{"line":115,"column":46}},"77":{"start":{"line":118,"column":20},"end":{"line":118,"column":81}},"78":{"start":{"line":119,"column":32},"end":{"line":119,"column":34}},"79":{"start":{"line":120,"column":8},"end":{"line":127,"column":9}},"80":{"start":{"line":121,"column":12},"end":{"line":126,"column":13}},"81":{"start":{"line":124,"column":39},"end":{"line":124,"column":65}},"82":{"start":{"line":125,"column":16},"end":{"line":125,"column":53}},"83":{"start":{"line":128,"column":31},"end":{"line":128,"column":65}},"84":{"start":{"line":129,"column":25},"end":{"line":129,"column":81}},"85":{"start":{"line":129,"column":61},"end":{"line":129,"column":76}},"86":{"start":{"line":130,"column":8},"end":{"line":130,"column":24}},"87":{"start":{"line":133,"column":28},"end":{"line":133,"column":54}},"88":{"start":{"line":134,"column":27},"end":{"line":134,"column":50}},"89":{"start":{"line":135,"column":28},"end":{"line":135,"column":45}},"90":{"start":{"line":136,"column":25},"end":{"line":136,"column":27}},"91":{"start":{"line":137,"column":8},"end":{"line":149,"column":11}},"92":{"start":{"line":138,"column":25},"end":{"line":138,"column":31}},"93":{"start":{"line":139,"column":23},"end":{"line":139,"column":33}},"94":{"start":{"line":140,"column":26},"end":{"line":140,"column":35}},"95":{"start":{"line":141,"column":31},"end":{"line":141,"column":44}},"96":{"start":{"line":142,"column":25},"end":{"line":142,"column":36}},"97":{"start":{"line":143,"column":25},"end":{"line":143,"column":33}},"98":{"start":{"line":144,"column":24},"end":{"line":144,"column":31}},"99":{"start":{"line":145,"column":25},"end":{"line":145,"column":33}},"100":{"start":{"line":146,"column":25},"end":{"line":146,"column":33}},"101":{"start":{"line":147,"column":26},"end":{"line":147,"column":35}},"102":{"start":{"line":148,"column":12},"end":{"line":148,"column":104}},"103":{"start":{"line":150,"column":8},"end":{"line":150,"column":24}},"104":{"start":{"line":153,"column":27},"end":{"line":153,"column":32}},"105":{"start":{"line":154,"column":8},"end":{"line":156,"column":9}},"106":{"start":{"line":155,"column":12},"end":{"line":155,"column":71}},"107":{"start":{"line":157,"column":32},"end":{"line":157,"column":80}},"108":{"start":{"line":158,"column":25},"end":{"line":158,"column":85}},"109":{"start":{"line":159,"column":19},"end":{"line":159,"column":46}},"110":{"start":{"line":160,"column":8},"end":{"line":160,"column":32}},"111":{"start":{"line":161,"column":8},"end":{"line":161,"column":29}},"112":{"start":{"line":162,"column":33},"end":{"line":162,"column":86}},"113":{"start":{"line":163,"column":8},"end":{"line":165,"column":9}},"114":{"start":{"line":164,"column":12},"end":{"line":164,"column":78}},"115":{"start":{"line":166,"column":8},"end":{"line":175,"column":9}},"116":{"start":{"line":167,"column":12},"end":{"line":167,"column":36}},"117":{"start":{"line":170,"column":26},"end":{"line":170,"column":97}},"118":{"start":{"line":171,"column":12},"end":{"line":173,"column":13}},"119":{"start":{"line":172,"column":16},"end":{"line":172,"column":31}},"120":{"start":{"line":174,"column":12},"end":{"line":174,"column":25}},"121":{"start":{"line":178,"column":8},"end":{"line":188,"column":9}},"122":{"start":{"line":180,"column":16},"end":{"line":182,"column":19}},"123":{"start":{"line":181,"column":20},"end":{"line":181,"column":43}},"124":{"start":{"line":184,"column":16},"end":{"line":184,"column":41}},"125":{"start":{"line":185,"column":16},"end":{"line":187,"column":19}},"126":{"start":{"line":186,"column":20},"end":{"line":186,"column":47}},"127":{"start":{"line":189,"column":8},"end":{"line":189,"column":28}},"128":{"start":{"line":190,"column":8},"end":{"line":190,"column":20}},"129":{"start":{"line":193,"column":0},"end":{"line":193,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":56},"end":{"line":25,"column":57}},"loc":{"start":{"line":25,"column":71},"end":{"line":27,"column":1}},"line":25},"7":{"name":"(anonymous_7)","decl":{"start":{"line":47,"column":4},"end":{"line":47,"column":5}},"loc":{"start":{"line":47,"column":81},"end":{"line":58,"column":5}},"line":47},"8":{"name":"(anonymous_8)","decl":{"start":{"line":66,"column":4},"end":{"line":66,"column":5}},"loc":{"start":{"line":66,"column":18},"end":{"line":71,"column":5}},"line":66},"9":{"name":"(anonymous_9)","decl":{"start":{"line":72,"column":4},"end":{"line":72,"column":5}},"loc":{"start":{"line":72,"column":40},"end":{"line":95,"column":5}},"line":72},"10":{"name":"(anonymous_10)","decl":{"start":{"line":96,"column":4},"end":{"line":96,"column":5}},"loc":{"start":{"line":96,"column":28},"end":{"line":113,"column":5}},"line":96},"11":{"name":"(anonymous_11)","decl":{"start":{"line":100,"column":53},"end":{"line":100,"column":54}},"loc":{"start":{"line":100,"column":66},"end":{"line":100,"column":83}},"line":100},"12":{"name":"(anonymous_12)","decl":{"start":{"line":114,"column":4},"end":{"line":114,"column":5}},"loc":{"start":{"line":114,"column":25},"end":{"line":116,"column":5}},"line":114},"13":{"name":"(anonymous_13)","decl":{"start":{"line":117,"column":4},"end":{"line":117,"column":5}},"loc":{"start":{"line":117,"column":37},"end":{"line":131,"column":5}},"line":117},"14":{"name":"(anonymous_14)","decl":{"start":{"line":129,"column":47},"end":{"line":129,"column":48}},"loc":{"start":{"line":129,"column":61},"end":{"line":129,"column":76}},"line":129},"15":{"name":"(anonymous_15)","decl":{"start":{"line":132,"column":4},"end":{"line":132,"column":5}},"loc":{"start":{"line":132,"column":32},"end":{"line":151,"column":5}},"line":132},"16":{"name":"(anonymous_16)","decl":{"start":{"line":137,"column":28},"end":{"line":137,"column":29}},"loc":{"start":{"line":137,"column":44},"end":{"line":149,"column":9}},"line":137},"17":{"name":"(anonymous_17)","decl":{"start":{"line":152,"column":4},"end":{"line":152,"column":5}},"loc":{"start":{"line":152,"column":30},"end":{"line":176,"column":5}},"line":152},"18":{"name":"(anonymous_18)","decl":{"start":{"line":177,"column":4},"end":{"line":177,"column":5}},"loc":{"start":{"line":177,"column":40},"end":{"line":191,"column":5}},"line":177},"19":{"name":"(anonymous_19)","decl":{"start":{"line":180,"column":33},"end":{"line":180,"column":34}},"loc":{"start":{"line":180,"column":43},"end":{"line":182,"column":17}},"line":180},"20":{"name":"(anonymous_20)","decl":{"start":{"line":185,"column":33},"end":{"line":185,"column":34}},"loc":{"start":{"line":185,"column":43},"end":{"line":187,"column":17}},"line":185}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":27}},{"start":{"line":25,"column":31},"end":{"line":25,"column":51}},{"start":{"line":25,"column":56},"end":{"line":27,"column":1}}],"line":25},"17":{"loc":{"start":{"line":26,"column":11},"end":{"line":26,"column":61}},"type":"cond-expr","locations":[{"start":{"line":26,"column":37},"end":{"line":26,"column":40}},{"start":{"line":26,"column":43},"end":{"line":26,"column":61}}],"line":26},"18":{"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":33}},"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":15}},{"start":{"line":26,"column":19},"end":{"line":26,"column":33}}],"line":26},"19":{"loc":{"start":{"line":73,"column":8},"end":{"line":75,"column":9}},"type":"if","locations":[{"start":{"line":73,"column":8},"end":{"line":75,"column":9}},{"start":{"line":73,"column":8},"end":{"line":75,"column":9}}],"line":73},"20":{"loc":{"start":{"line":73,"column":12},"end":{"line":73,"column":61}},"type":"binary-expr","locations":[{"start":{"line":73,"column":12},"end":{"line":73,"column":15}},{"start":{"line":73,"column":19},"end":{"line":73,"column":41}},{"start":{"line":73,"column":45},"end":{"line":73,"column":61}}],"line":73},"21":{"loc":{"start":{"line":77,"column":12},"end":{"line":79,"column":13}},"type":"if","locations":[{"start":{"line":77,"column":12},"end":{"line":79,"column":13}},{"start":{"line":77,"column":12},"end":{"line":79,"column":13}}],"line":77},"22":{"loc":{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},"type":"if","locations":[{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},{"start":{"line":97,"column":8},"end":{"line":99,"column":9}}],"line":97},"23":{"loc":{"start":{"line":97,"column":12},"end":{"line":97,"column":61}},"type":"binary-expr","locations":[{"start":{"line":97,"column":12},"end":{"line":97,"column":15}},{"start":{"line":97,"column":19},"end":{"line":97,"column":41}},{"start":{"line":97,"column":45},"end":{"line":97,"column":61}}],"line":97},"24":{"loc":{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},"type":"if","locations":[{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},{"start":{"line":101,"column":8},"end":{"line":103,"column":9}}],"line":101},"25":{"loc":{"start":{"line":121,"column":12},"end":{"line":126,"column":13}},"type":"if","locations":[{"start":{"line":121,"column":12},"end":{"line":126,"column":13}},{"start":{"line":121,"column":12},"end":{"line":126,"column":13}}],"line":121},"26":{"loc":{"start":{"line":154,"column":8},"end":{"line":156,"column":9}},"type":"if","locations":[{"start":{"line":154,"column":8},"end":{"line":156,"column":9}},{"start":{"line":154,"column":8},"end":{"line":156,"column":9}}],"line":154},"27":{"loc":{"start":{"line":163,"column":8},"end":{"line":165,"column":9}},"type":"if","locations":[{"start":{"line":163,"column":8},"end":{"line":165,"column":9}},{"start":{"line":163,"column":8},"end":{"line":165,"column":9}}],"line":163},"28":{"loc":{"start":{"line":166,"column":8},"end":{"line":175,"column":9}},"type":"if","locations":[{"start":{"line":166,"column":8},"end":{"line":175,"column":9}},{"start":{"line":166,"column":8},"end":{"line":175,"column":9}}],"line":166},"29":{"loc":{"start":{"line":178,"column":8},"end":{"line":188,"column":9}},"type":"switch","locations":[{"start":{"line":179,"column":12},"end":{"line":182,"column":19}},{"start":{"line":183,"column":12},"end":{"line":187,"column":19}}],"line":178}},"s":{"0":1,"1":148,"2":148,"3":148,"4":148,"5":148,"6":86,"7":148,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":148,"21":148,"22":1,"23":1,"24":1,"25":4,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":64697,"35":64697,"36":64697,"37":64697,"38":64697,"39":64697,"40":64697,"41":64697,"42":64697,"43":64697,"44":1,"45":23,"46":23,"47":23,"48":23,"49":23,"50":44,"51":4,"52":40,"53":44,"54":1,"55":39,"56":37,"57":37,"58":37,"59":37,"60":37,"61":37,"62":80,"63":37,"64":6,"65":4,"66":2,"67":5,"68":2,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":0,"76":19,"77":39,"78":38,"79":38,"80":6026,"81":5988,"82":5988,"83":38,"84":37,"85":5987,"86":37,"87":5988,"88":5988,"89":5987,"90":5987,"91":5987,"92":64697,"93":64697,"94":64697,"95":64697,"96":64697,"97":64697,"98":64697,"99":64697,"100":64697,"101":64697,"102":64697,"103":5987,"104":52,"105":52,"106":40,"107":11,"108":11,"109":11,"110":11,"111":11,"112":11,"113":11,"114":2,"115":9,"116":0,"117":9,"118":9,"119":49,"120":9,"121":9,"122":0,"123":0,"124":9,"125":9,"126":214,"127":0,"128":0,"129":1},"f":{"0":148,"1":86,"2":0,"3":1,"4":0,"5":1,"6":4,"7":64697,"8":23,"9":44,"10":6,"11":5,"12":19,"13":39,"14":5987,"15":5988,"16":64697,"17":52,"18":9,"19":0,"20":214},"b":{"0":[1,1,1],"1":[1,0],"2":[148,0],"3":[148,0],"4":[148,148],"5":[0,148],"6":[148,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[148,0],"15":[148,148],"16":[1,1,1],"17":[2,2],"18":[4,4],"19":[4,40],"20":[44,43,42],"21":[1,43],"22":[4,2],"23":[6,5,4],"24":[1,1],"25":[38,5988],"26":[40,11],"27":[2,9],"28":[0,9],"29":[0,9]},"inputSourceMap":{"version":3,"file":"/Users/tony/IdeaProjects/project_team122/src/controller/InsightFacade.ts","sources":["/Users/tony/IdeaProjects/project_team122/src/controller/InsightFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tIInsightFacade,\n\tInsightDataset,\n\tInsightDatasetKind,\n\tInsightError,\n\tInsightResult,\n\tNotFoundError, ResultTooLargeError\n} from \"./IInsightFacade\";\nimport jszip from \"jszip\";\nimport * as fs from \"fs-extra\";\nimport path from \"path\";\nimport {symlinkSync} from \"fs\";\nimport ValidationHelpers, {Option, Query, Where} from \"./QueryModel\";\nimport ValidQueryHelpers from \"./ValidQueryHelpers\";\n\n\n/**\n * This is the main programmatic entry point for the project.\n * Method documentation is in IInsightFacade\n *\n */\nexport class Section {\n\tprivate readonly uuid: string;\n\tprivate readonly id: string;\n\tprivate readonly title: string;\n\tprivate readonly instructor: string;\n\tprivate readonly dept: string;\n\tprivate readonly year: number;\n\tprivate readonly avg: number;\n\tprivate readonly pass: number;\n\tprivate readonly fail: number;\n\tprivate readonly audit: number;\n\n\tconstructor(uuid: string, id: string, title: string, instructor: string, dept: string, year: number, avg: number,\n\t\tpass: number, fail: number, audit: number) {\n\t\tthis.uuid = uuid;\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.instructor = instructor;\n\t\tthis.dept = dept;\n\t\tthis.year = year;\n\t\tthis.avg = avg;\n\t\tthis.pass = pass;\n\t\tthis.fail = fail;\n\t\tthis.audit = audit;\n\t}\n}\n\nexport default class InsightFacade implements IInsightFacade {\n\tprivate readonly datasets: InsightDataset[];\n\tprivate readonly dataDir: string = \"./data\"; // Directory to store the processed datasets\n\tprivate readonly validationHelpers: ValidationHelpers;\n\tprivate readonly validQueryHelpers: ValidQueryHelpers;\n\n\tconstructor() {\n\t\tthis.datasets = [];\n\t\tconsole.log(\"InsightFacadeImpl::init()\");\n\t\tthis.validationHelpers = new ValidationHelpers(this.datasets);\n\t\tthis.validQueryHelpers = new ValidQueryHelpers();\n\t}\n\n\tpublic async addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\n\t\t// Validate the id\n\t\tif (!id || id.trim().length === 0 || id.includes(\"_\")) {\n\t\t\tthrow new InsightError(\"Invalid id\");\n\t\t}\n\n\t\t// Check if the dataset with the same id already exists\n\t\tfor (let dataset of this.datasets) {\n\t\t\tif (dataset.id === id) {\n\t\t\t\tthrow new InsightError(\"Dataset with the same id already exists\");\n\t\t\t}\n\t\t}\n\n\t\t// Process and save the dataset\n\t\tconst sections = await this.processZipFile(content);\n\n\t\t// Ensure the data directory exists\n\t\tawait fs.ensureDir(this.dataDir);\n\n\t\t// Save the processed data to disk\n\t\tconst filePath = path.join(this.dataDir, `${id}.json`);\n\t\tawait fs.writeJson(filePath, JSON.stringify(sections));\n\n\t\t// Add the datasets object\n\t\tthis.datasets.push(\n\t\t\t{\n\t\t\t\tid,\n\t\t\t\tkind,\n\t\t\t\tnumRows: sections.length\n\t\t\t}\n\t\t);\n\n\t\t// Return the list of currently added datasets\n\t\tconst ids: string[] = [];\n\n\t\tfor (let dataset of this.datasets) {\n\t\t\tids.push(dataset.id);\n\t\t}\n\n\t\treturn ids;\n\t}\n\n\tpublic async removeDataset(id: string): Promise<string> {\n\t\t// Validate the id\n\t\tif (!id || id.trim().length === 0 || id.includes(\"_\")) {\n\t\t\tthrow new InsightError(\"Invalid id\");\n\t\t}\n\n\t\t// Check if the dataset with the specified id exists\n\t\tconst datasetIndex = this.datasets.findIndex((dataset) => dataset.id === id);\n\t\tif (datasetIndex === -1) {\n\t\t\tthrow new NotFoundError(\"Dataset not found\");\n\t\t}\n\n\t\ttry {\n\t\t\t// Remove dataset from memory\n\t\t\tthis.datasets.splice(datasetIndex, 1);\n\n\t\t\t// Remove dataset from disk\n\t\t\tconst filePath = path.join(this.dataDir, `${id}.json`);\n\t\t\tawait fs.remove(filePath);\n\n\t\t\treturn id;\n\t\t} catch (error: any) {\n\t\t\t// If any error occurs during removal, throw an InsightError\n\t\t\tthrow new InsightError(`Failed to remove dataset ${id}: ${error.message}`);\n\t\t}\n\t}\n\n\tpublic async listDatasets(): Promise<InsightDataset[]> {\n\t\treturn Promise.resolve(this.datasets);\n\t}\n\n\t// Helpers\n\tprivate async processZipFile(zipContent: string): Promise<Section[]> {\n\t\tconst zip = await jszip.loadAsync(zipContent, {base64: true});\n\t\tconst sectionPromises: Array<Promise<Section[]>> = [];\n\n\t\tfor (const [relativePath, file] of Object.entries(zip.files)) {\n\t\t\tif (file.dir) {\n\t\t\t\t// Skip courses directory\n\t\t\t} else {\n\t\t\t\tconst sectionPromise = this.extractSections(file);\n\t\t\t\tsectionPromises.push(sectionPromise);\n\t\t\t}\n\t\t}\n\n\t\t// Use Promise.all to wait for all async calls to complete\n\t\tconst sectionsArrays = await Promise.all(sectionPromises);\n\n\t\t// Flatten the array of arrays into a single array of sections\n\t\tconst sections: Section[] = sectionsArrays.reduce((acc, val) => acc.concat(val), []);\n\n\t\treturn sections;\n\t}\n\n\tprivate async extractSections(file: jszip.JSZipObject): Promise<Section[]> {\n\t\t// Parse the file content\n\t\tconst fileContent = await file.async(\"string\");\n\n\t\t// Parse the string into a JSON object\n\t\tconst jsonObject = JSON.parse(fileContent);\n\n\t\t// Extract the \"result\" array from the JSON object\n\t\tconst resultArray = jsonObject.result;\n\n\t\tconst sections: Section[] = [];\n\n\t\tresultArray.forEach((obj: any, index: any) => {\n\t\t\tconst uuid = obj.id;\n\t\t\tconst id = obj.Course;\n\t\t\tconst title = obj.Title;\n\t\t\tconst instructor = obj.Professor;\n\t\t\tconst dept = obj.Subject;\n\t\t\tconst year = obj.Year;\n\t\t\tconst avg = obj.Avg;\n\t\t\tconst pass = obj.Pass;\n\t\t\tconst fail = obj.Fail;\n\t\t\tconst audit = obj.Audit;\n\n\t\t\tsections.push(new Section(uuid, id, title, instructor, dept, year, avg, pass, fail, audit));\n\t\t});\n\n\t\treturn sections;\n\t}\n\n\tpublic async performQuery(query: unknown): Promise<InsightResult[]> {\n\t\tconst queryModel: Query = query as Query;\n\t\tif (!this.validationHelpers.validateQuery(queryModel)) {\n\t\t\treturn Promise.reject(new InsightError());\n\t\t}\n\t\tconst targetDatasetId: string = this.validQueryHelpers.findDatasetId(queryModel);\n\t\tconst filePath = path.join(this.dataDir, `${targetDatasetId}.json`);\n\t\tlet data = await fs.readJson(filePath);\n\t\tdata = JSON.parse(data);\n\t\tconsole.log(data[0]);\n\t\tconst dataToBeReturned = this.validQueryHelpers.filterResult(queryModel, data);\n\t\tif (dataToBeReturned.length > 5000) {\n\t\t\treturn Promise.reject(new ResultTooLargeError());\n\t\t}\n\t\tif (queryModel.OPTIONS.ORDER === undefined) {\n\t\t\treturn dataToBeReturned;\n\t\t} else {\n\t\t\tconst data1 = this.applyOrder(dataToBeReturned, queryModel.OPTIONS.ORDER, queryModel);\n\t\t\tfor (const d of data1) {\n\t\t\t\tconsole.log(d);\n\t\t\t}\n\t\t\treturn data1;\n\t\t}\n\t}\n\n\tpublic applyOrder(data: InsightResult[], order: string, queryModel: Query): InsightResult[] {\n\t\tswitch (order) {\n\t\t\tcase this.validQueryHelpers.findDatasetId(queryModel) + \"_\" + \"uuid\" :\n\t\t\t\treturn data.sort((a, b) => {\n\t\t\t\t\treturn (a.uuid as any) - (b.uuid as any);\n\t\t\t\t});\n\t\t\tcase this.validQueryHelpers.findDatasetId(queryModel) + \"_\" + \"avg\" :\n\t\t\t\tconsole.log(\"avg order\");\n\t\t\t\treturn data.sort((a, b) => {\n\t\t\t\t\treturn (a[order] as any) - (b[order] as any);\n\t\t\t\t});\n\t\t}\n\t\tconsole.log(\"nope\");\n\t\treturn data;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"617554fe3681737d7fcdab13a22f53c182a0110b","contentHash":"0d4d0e288be392c747cb04b24ca60e7b107a2e9a7050d9d94e4a73bdd33956a3"},"/Users/tony/IdeaProjects/project_team122/src/controller/QueryModel.ts":{"path":"/Users/tony/IdeaProjects/project_team122/src/controller/QueryModel.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":21},"end":{"line":5,"column":24}},"2":{"start":{"line":7,"column":8},"end":{"line":7,"column":33}},"3":{"start":{"line":10,"column":8},"end":{"line":19,"column":9}},"4":{"start":{"line":11,"column":12},"end":{"line":11,"column":25}},"5":{"start":{"line":14,"column":12},"end":{"line":18,"column":13}},"6":{"start":{"line":15,"column":16},"end":{"line":17,"column":17}},"7":{"start":{"line":16,"column":20},"end":{"line":16,"column":33}},"8":{"start":{"line":20,"column":8},"end":{"line":20,"column":20}},"9":{"start":{"line":23,"column":8},"end":{"line":32,"column":9}},"10":{"start":{"line":24,"column":12},"end":{"line":24,"column":25}},"11":{"start":{"line":27,"column":12},"end":{"line":31,"column":13}},"12":{"start":{"line":28,"column":16},"end":{"line":30,"column":17}},"13":{"start":{"line":29,"column":20},"end":{"line":29,"column":33}},"14":{"start":{"line":33,"column":8},"end":{"line":33,"column":20}},"15":{"start":{"line":36,"column":8},"end":{"line":38,"column":9}},"16":{"start":{"line":37,"column":12},"end":{"line":37,"column":25}},"17":{"start":{"line":39,"column":8},"end":{"line":39,"column":44}},"18":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"19":{"start":{"line":43,"column":12},"end":{"line":43,"column":25}},"20":{"start":{"line":45,"column":21},"end":{"line":45,"column":39}},"21":{"start":{"line":46,"column":32},"end":{"line":46,"column":49}},"22":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"23":{"start":{"line":48,"column":12},"end":{"line":48,"column":25}},"24":{"start":{"line":50,"column":25},"end":{"line":50,"column":59}},"25":{"start":{"line":51,"column":23},"end":{"line":51,"column":58}},"26":{"start":{"line":52,"column":20},"end":{"line":52,"column":22}},"27":{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},"28":{"start":{"line":54,"column":12},"end":{"line":54,"column":33}},"29":{"start":{"line":56,"column":8},"end":{"line":63,"column":9}},"30":{"start":{"line":57,"column":12},"end":{"line":57,"column":43}},"31":{"start":{"line":60,"column":12},"end":{"line":62,"column":13}},"32":{"start":{"line":61,"column":16},"end":{"line":61,"column":29}},"33":{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},"34":{"start":{"line":65,"column":12},"end":{"line":65,"column":25}},"35":{"start":{"line":67,"column":31},"end":{"line":67,"column":71}},"36":{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},"37":{"start":{"line":69,"column":12},"end":{"line":69,"column":25}},"38":{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},"39":{"start":{"line":72,"column":12},"end":{"line":72,"column":25}},"40":{"start":{"line":74,"column":8},"end":{"line":74,"column":20}},"41":{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},"42":{"start":{"line":78,"column":12},"end":{"line":78,"column":25}},"43":{"start":{"line":80,"column":21},"end":{"line":80,"column":39}},"44":{"start":{"line":81,"column":32},"end":{"line":81,"column":49}},"45":{"start":{"line":82,"column":8},"end":{"line":84,"column":9}},"46":{"start":{"line":83,"column":12},"end":{"line":83,"column":25}},"47":{"start":{"line":85,"column":25},"end":{"line":85,"column":59}},"48":{"start":{"line":86,"column":23},"end":{"line":86,"column":58}},"49":{"start":{"line":87,"column":20},"end":{"line":87,"column":22}},"50":{"start":{"line":88,"column":8},"end":{"line":90,"column":9}},"51":{"start":{"line":89,"column":12},"end":{"line":89,"column":33}},"52":{"start":{"line":91,"column":8},"end":{"line":98,"column":9}},"53":{"start":{"line":92,"column":12},"end":{"line":92,"column":43}},"54":{"start":{"line":95,"column":12},"end":{"line":97,"column":13}},"55":{"start":{"line":96,"column":16},"end":{"line":96,"column":29}},"56":{"start":{"line":99,"column":8},"end":{"line":101,"column":9}},"57":{"start":{"line":100,"column":12},"end":{"line":100,"column":25}},"58":{"start":{"line":102,"column":31},"end":{"line":102,"column":71}},"59":{"start":{"line":103,"column":8},"end":{"line":105,"column":9}},"60":{"start":{"line":104,"column":12},"end":{"line":104,"column":25}},"61":{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},"62":{"start":{"line":107,"column":12},"end":{"line":107,"column":25}},"63":{"start":{"line":109,"column":8},"end":{"line":109,"column":20}},"64":{"start":{"line":112,"column":8},"end":{"line":114,"column":9}},"65":{"start":{"line":113,"column":12},"end":{"line":113,"column":25}},"66":{"start":{"line":115,"column":21},"end":{"line":115,"column":39}},"67":{"start":{"line":116,"column":32},"end":{"line":116,"column":49}},"68":{"start":{"line":117,"column":8},"end":{"line":119,"column":9}},"69":{"start":{"line":118,"column":12},"end":{"line":118,"column":25}},"70":{"start":{"line":120,"column":25},"end":{"line":120,"column":59}},"71":{"start":{"line":121,"column":23},"end":{"line":121,"column":58}},"72":{"start":{"line":122,"column":20},"end":{"line":122,"column":22}},"73":{"start":{"line":123,"column":8},"end":{"line":125,"column":9}},"74":{"start":{"line":124,"column":12},"end":{"line":124,"column":33}},"75":{"start":{"line":126,"column":8},"end":{"line":133,"column":9}},"76":{"start":{"line":127,"column":12},"end":{"line":127,"column":43}},"77":{"start":{"line":130,"column":12},"end":{"line":132,"column":13}},"78":{"start":{"line":131,"column":16},"end":{"line":131,"column":29}},"79":{"start":{"line":134,"column":8},"end":{"line":136,"column":9}},"80":{"start":{"line":135,"column":12},"end":{"line":135,"column":25}},"81":{"start":{"line":137,"column":31},"end":{"line":137,"column":71}},"82":{"start":{"line":138,"column":8},"end":{"line":140,"column":9}},"83":{"start":{"line":139,"column":12},"end":{"line":139,"column":25}},"84":{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},"85":{"start":{"line":142,"column":12},"end":{"line":142,"column":25}},"86":{"start":{"line":144,"column":8},"end":{"line":144,"column":20}},"87":{"start":{"line":148,"column":12},"end":{"line":150,"column":13}},"88":{"start":{"line":149,"column":16},"end":{"line":149,"column":29}},"89":{"start":{"line":151,"column":25},"end":{"line":151,"column":43}},"90":{"start":{"line":152,"column":36},"end":{"line":152,"column":53}},"91":{"start":{"line":153,"column":12},"end":{"line":155,"column":13}},"92":{"start":{"line":154,"column":16},"end":{"line":154,"column":29}},"93":{"start":{"line":156,"column":29},"end":{"line":156,"column":63}},"94":{"start":{"line":157,"column":27},"end":{"line":157,"column":62}},"95":{"start":{"line":158,"column":24},"end":{"line":158,"column":26}},"96":{"start":{"line":159,"column":12},"end":{"line":161,"column":13}},"97":{"start":{"line":160,"column":16},"end":{"line":160,"column":37}},"98":{"start":{"line":162,"column":12},"end":{"line":169,"column":13}},"99":{"start":{"line":163,"column":16},"end":{"line":163,"column":47}},"100":{"start":{"line":166,"column":16},"end":{"line":168,"column":17}},"101":{"start":{"line":167,"column":20},"end":{"line":167,"column":33}},"102":{"start":{"line":170,"column":12},"end":{"line":172,"column":13}},"103":{"start":{"line":171,"column":16},"end":{"line":171,"column":29}},"104":{"start":{"line":173,"column":35},"end":{"line":173,"column":80}},"105":{"start":{"line":174,"column":12},"end":{"line":176,"column":13}},"106":{"start":{"line":175,"column":16},"end":{"line":175,"column":29}},"107":{"start":{"line":177,"column":12},"end":{"line":179,"column":13}},"108":{"start":{"line":178,"column":16},"end":{"line":178,"column":29}},"109":{"start":{"line":180,"column":27},"end":{"line":180,"column":69}},"110":{"start":{"line":181,"column":12},"end":{"line":183,"column":13}},"111":{"start":{"line":182,"column":16},"end":{"line":182,"column":29}},"112":{"start":{"line":184,"column":12},"end":{"line":184,"column":24}},"113":{"start":{"line":188,"column":8},"end":{"line":211,"column":9}},"114":{"start":{"line":189,"column":12},"end":{"line":189,"column":52}},"115":{"start":{"line":191,"column":13},"end":{"line":211,"column":9}},"116":{"start":{"line":192,"column":12},"end":{"line":192,"column":50}},"117":{"start":{"line":194,"column":13},"end":{"line":211,"column":9}},"118":{"start":{"line":195,"column":12},"end":{"line":195,"column":52}},"119":{"start":{"line":197,"column":13},"end":{"line":211,"column":9}},"120":{"start":{"line":198,"column":12},"end":{"line":198,"column":50}},"121":{"start":{"line":200,"column":13},"end":{"line":211,"column":9}},"122":{"start":{"line":201,"column":12},"end":{"line":201,"column":50}},"123":{"start":{"line":203,"column":13},"end":{"line":211,"column":9}},"124":{"start":{"line":204,"column":12},"end":{"line":204,"column":50}},"125":{"start":{"line":206,"column":13},"end":{"line":211,"column":9}},"126":{"start":{"line":207,"column":12},"end":{"line":207,"column":50}},"127":{"start":{"line":209,"column":13},"end":{"line":211,"column":9}},"128":{"start":{"line":210,"column":12},"end":{"line":210,"column":24}},"129":{"start":{"line":212,"column":8},"end":{"line":212,"column":21}},"130":{"start":{"line":215,"column":8},"end":{"line":224,"column":9}},"131":{"start":{"line":216,"column":12},"end":{"line":216,"column":25}},"132":{"start":{"line":219,"column":12},"end":{"line":222,"column":13}},"133":{"start":{"line":220,"column":16},"end":{"line":221,"column":79}},"134":{"start":{"line":223,"column":12},"end":{"line":223,"column":63}},"135":{"start":{"line":227,"column":8},"end":{"line":229,"column":9}},"136":{"start":{"line":228,"column":12},"end":{"line":228,"column":25}},"137":{"start":{"line":230,"column":8},"end":{"line":257,"column":9}},"138":{"start":{"line":231,"column":36},"end":{"line":231,"column":55}},"139":{"start":{"line":232,"column":12},"end":{"line":234,"column":13}},"140":{"start":{"line":233,"column":16},"end":{"line":233,"column":29}},"141":{"start":{"line":235,"column":29},"end":{"line":235,"column":65}},"142":{"start":{"line":236,"column":27},"end":{"line":236,"column":64}},"143":{"start":{"line":237,"column":24},"end":{"line":237,"column":26}},"144":{"start":{"line":238,"column":12},"end":{"line":240,"column":13}},"145":{"start":{"line":239,"column":16},"end":{"line":239,"column":37}},"146":{"start":{"line":241,"column":12},"end":{"line":248,"column":13}},"147":{"start":{"line":242,"column":16},"end":{"line":242,"column":47}},"148":{"start":{"line":245,"column":16},"end":{"line":247,"column":17}},"149":{"start":{"line":246,"column":20},"end":{"line":246,"column":33}},"150":{"start":{"line":249,"column":12},"end":{"line":251,"column":13}},"151":{"start":{"line":250,"column":16},"end":{"line":250,"column":29}},"152":{"start":{"line":252,"column":32},"end":{"line":253,"column":60}},"153":{"start":{"line":254,"column":12},"end":{"line":256,"column":13}},"154":{"start":{"line":255,"column":16},"end":{"line":255,"column":29}},"155":{"start":{"line":258,"column":8},"end":{"line":258,"column":20}},"156":{"start":{"line":261,"column":8},"end":{"line":263,"column":9}},"157":{"start":{"line":262,"column":12},"end":{"line":262,"column":25}},"158":{"start":{"line":264,"column":8},"end":{"line":264,"column":20}},"159":{"start":{"line":267,"column":8},"end":{"line":278,"column":9}},"160":{"start":{"line":268,"column":12},"end":{"line":268,"column":25}},"161":{"start":{"line":270,"column":13},"end":{"line":278,"column":9}},"162":{"start":{"line":271,"column":12},"end":{"line":271,"column":25}},"163":{"start":{"line":274,"column":28},"end":{"line":275,"column":60}},"164":{"start":{"line":276,"column":12},"end":{"line":276,"column":38}},"165":{"start":{"line":277,"column":12},"end":{"line":277,"column":27}},"166":{"start":{"line":281,"column":0},"end":{"line":281,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":26},"end":{"line":8,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":21},"end":{"line":21,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":19},"end":{"line":34,"column":5}},"line":22},"3":{"name":"(anonymous_3)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":21},"end":{"line":40,"column":5}},"line":35},"4":{"name":"(anonymous_4)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":19},"end":{"line":75,"column":5}},"line":41},"5":{"name":"(anonymous_5)","decl":{"start":{"line":76,"column":4},"end":{"line":76,"column":5}},"loc":{"start":{"line":76,"column":19},"end":{"line":110,"column":5}},"line":76},"6":{"name":"(anonymous_6)","decl":{"start":{"line":111,"column":4},"end":{"line":111,"column":5}},"loc":{"start":{"line":111,"column":19},"end":{"line":145,"column":5}},"line":111},"7":{"name":"(anonymous_7)","decl":{"start":{"line":146,"column":4},"end":{"line":146,"column":5}},"loc":{"start":{"line":146,"column":19},"end":{"line":186,"column":5}},"line":146},"8":{"name":"(anonymous_8)","decl":{"start":{"line":187,"column":4},"end":{"line":187,"column":5}},"loc":{"start":{"line":187,"column":35},"end":{"line":213,"column":5}},"line":187},"9":{"name":"(anonymous_9)","decl":{"start":{"line":214,"column":4},"end":{"line":214,"column":5}},"loc":{"start":{"line":214,"column":37},"end":{"line":225,"column":5}},"line":214},"10":{"name":"(anonymous_10)","decl":{"start":{"line":226,"column":4},"end":{"line":226,"column":5}},"loc":{"start":{"line":226,"column":29},"end":{"line":259,"column":5}},"line":226},"11":{"name":"(anonymous_11)","decl":{"start":{"line":260,"column":4},"end":{"line":260,"column":5}},"loc":{"start":{"line":260,"column":34},"end":{"line":265,"column":5}},"line":260},"12":{"name":"(anonymous_12)","decl":{"start":{"line":266,"column":4},"end":{"line":266,"column":5}},"loc":{"start":{"line":266,"column":30},"end":{"line":279,"column":5}},"line":266}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":8},"end":{"line":19,"column":9}},"type":"if","locations":[{"start":{"line":10,"column":8},"end":{"line":19,"column":9}},{"start":{"line":10,"column":8},"end":{"line":19,"column":9}}],"line":10},"1":{"loc":{"start":{"line":15,"column":16},"end":{"line":17,"column":17}},"type":"if","locations":[{"start":{"line":15,"column":16},"end":{"line":17,"column":17}},{"start":{"line":15,"column":16},"end":{"line":17,"column":17}}],"line":15},"2":{"loc":{"start":{"line":23,"column":8},"end":{"line":32,"column":9}},"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":32,"column":9}},{"start":{"line":23,"column":8},"end":{"line":32,"column":9}}],"line":23},"3":{"loc":{"start":{"line":28,"column":16},"end":{"line":30,"column":17}},"type":"if","locations":[{"start":{"line":28,"column":16},"end":{"line":30,"column":17}},{"start":{"line":28,"column":16},"end":{"line":30,"column":17}}],"line":28},"4":{"loc":{"start":{"line":36,"column":8},"end":{"line":38,"column":9}},"type":"if","locations":[{"start":{"line":36,"column":8},"end":{"line":38,"column":9}},{"start":{"line":36,"column":8},"end":{"line":38,"column":9}}],"line":36},"5":{"loc":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},{"start":{"line":42,"column":8},"end":{"line":44,"column":9}}],"line":42},"6":{"loc":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},{"start":{"line":47,"column":8},"end":{"line":49,"column":9}}],"line":47},"7":{"loc":{"start":{"line":56,"column":8},"end":{"line":63,"column":9}},"type":"if","locations":[{"start":{"line":56,"column":8},"end":{"line":63,"column":9}},{"start":{"line":56,"column":8},"end":{"line":63,"column":9}}],"line":56},"8":{"loc":{"start":{"line":60,"column":12},"end":{"line":62,"column":13}},"type":"if","locations":[{"start":{"line":60,"column":12},"end":{"line":62,"column":13}},{"start":{"line":60,"column":12},"end":{"line":62,"column":13}}],"line":60},"9":{"loc":{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},{"start":{"line":64,"column":8},"end":{"line":66,"column":9}}],"line":64},"10":{"loc":{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},{"start":{"line":68,"column":8},"end":{"line":70,"column":9}}],"line":68},"11":{"loc":{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},"type":"if","locations":[{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},{"start":{"line":71,"column":8},"end":{"line":73,"column":9}}],"line":71},"12":{"loc":{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},"type":"if","locations":[{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},{"start":{"line":77,"column":8},"end":{"line":79,"column":9}}],"line":77},"13":{"loc":{"start":{"line":82,"column":8},"end":{"line":84,"column":9}},"type":"if","locations":[{"start":{"line":82,"column":8},"end":{"line":84,"column":9}},{"start":{"line":82,"column":8},"end":{"line":84,"column":9}}],"line":82},"14":{"loc":{"start":{"line":91,"column":8},"end":{"line":98,"column":9}},"type":"if","locations":[{"start":{"line":91,"column":8},"end":{"line":98,"column":9}},{"start":{"line":91,"column":8},"end":{"line":98,"column":9}}],"line":91},"15":{"loc":{"start":{"line":95,"column":12},"end":{"line":97,"column":13}},"type":"if","locations":[{"start":{"line":95,"column":12},"end":{"line":97,"column":13}},{"start":{"line":95,"column":12},"end":{"line":97,"column":13}}],"line":95},"16":{"loc":{"start":{"line":99,"column":8},"end":{"line":101,"column":9}},"type":"if","locations":[{"start":{"line":99,"column":8},"end":{"line":101,"column":9}},{"start":{"line":99,"column":8},"end":{"line":101,"column":9}}],"line":99},"17":{"loc":{"start":{"line":103,"column":8},"end":{"line":105,"column":9}},"type":"if","locations":[{"start":{"line":103,"column":8},"end":{"line":105,"column":9}},{"start":{"line":103,"column":8},"end":{"line":105,"column":9}}],"line":103},"18":{"loc":{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},"type":"if","locations":[{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},{"start":{"line":106,"column":8},"end":{"line":108,"column":9}}],"line":106},"19":{"loc":{"start":{"line":112,"column":8},"end":{"line":114,"column":9}},"type":"if","locations":[{"start":{"line":112,"column":8},"end":{"line":114,"column":9}},{"start":{"line":112,"column":8},"end":{"line":114,"column":9}}],"line":112},"20":{"loc":{"start":{"line":117,"column":8},"end":{"line":119,"column":9}},"type":"if","locations":[{"start":{"line":117,"column":8},"end":{"line":119,"column":9}},{"start":{"line":117,"column":8},"end":{"line":119,"column":9}}],"line":117},"21":{"loc":{"start":{"line":126,"column":8},"end":{"line":133,"column":9}},"type":"if","locations":[{"start":{"line":126,"column":8},"end":{"line":133,"column":9}},{"start":{"line":126,"column":8},"end":{"line":133,"column":9}}],"line":126},"22":{"loc":{"start":{"line":130,"column":12},"end":{"line":132,"column":13}},"type":"if","locations":[{"start":{"line":130,"column":12},"end":{"line":132,"column":13}},{"start":{"line":130,"column":12},"end":{"line":132,"column":13}}],"line":130},"23":{"loc":{"start":{"line":134,"column":8},"end":{"line":136,"column":9}},"type":"if","locations":[{"start":{"line":134,"column":8},"end":{"line":136,"column":9}},{"start":{"line":134,"column":8},"end":{"line":136,"column":9}}],"line":134},"24":{"loc":{"start":{"line":138,"column":8},"end":{"line":140,"column":9}},"type":"if","locations":[{"start":{"line":138,"column":8},"end":{"line":140,"column":9}},{"start":{"line":138,"column":8},"end":{"line":140,"column":9}}],"line":138},"25":{"loc":{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},"type":"if","locations":[{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},{"start":{"line":141,"column":8},"end":{"line":143,"column":9}}],"line":141},"26":{"loc":{"start":{"line":148,"column":12},"end":{"line":150,"column":13}},"type":"if","locations":[{"start":{"line":148,"column":12},"end":{"line":150,"column":13}},{"start":{"line":148,"column":12},"end":{"line":150,"column":13}}],"line":148},"27":{"loc":{"start":{"line":153,"column":12},"end":{"line":155,"column":13}},"type":"if","locations":[{"start":{"line":153,"column":12},"end":{"line":155,"column":13}},{"start":{"line":153,"column":12},"end":{"line":155,"column":13}}],"line":153},"28":{"loc":{"start":{"line":162,"column":12},"end":{"line":169,"column":13}},"type":"if","locations":[{"start":{"line":162,"column":12},"end":{"line":169,"column":13}},{"start":{"line":162,"column":12},"end":{"line":169,"column":13}}],"line":162},"29":{"loc":{"start":{"line":166,"column":16},"end":{"line":168,"column":17}},"type":"if","locations":[{"start":{"line":166,"column":16},"end":{"line":168,"column":17}},{"start":{"line":166,"column":16},"end":{"line":168,"column":17}}],"line":166},"30":{"loc":{"start":{"line":170,"column":12},"end":{"line":172,"column":13}},"type":"if","locations":[{"start":{"line":170,"column":12},"end":{"line":172,"column":13}},{"start":{"line":170,"column":12},"end":{"line":172,"column":13}}],"line":170},"31":{"loc":{"start":{"line":174,"column":12},"end":{"line":176,"column":13}},"type":"if","locations":[{"start":{"line":174,"column":12},"end":{"line":176,"column":13}},{"start":{"line":174,"column":12},"end":{"line":176,"column":13}}],"line":174},"32":{"loc":{"start":{"line":177,"column":12},"end":{"line":179,"column":13}},"type":"if","locations":[{"start":{"line":177,"column":12},"end":{"line":179,"column":13}},{"start":{"line":177,"column":12},"end":{"line":179,"column":13}}],"line":177},"33":{"loc":{"start":{"line":181,"column":12},"end":{"line":183,"column":13}},"type":"if","locations":[{"start":{"line":181,"column":12},"end":{"line":183,"column":13}},{"start":{"line":181,"column":12},"end":{"line":183,"column":13}}],"line":181},"34":{"loc":{"start":{"line":188,"column":8},"end":{"line":211,"column":9}},"type":"if","locations":[{"start":{"line":188,"column":8},"end":{"line":211,"column":9}},{"start":{"line":188,"column":8},"end":{"line":211,"column":9}}],"line":188},"35":{"loc":{"start":{"line":191,"column":13},"end":{"line":211,"column":9}},"type":"if","locations":[{"start":{"line":191,"column":13},"end":{"line":211,"column":9}},{"start":{"line":191,"column":13},"end":{"line":211,"column":9}}],"line":191},"36":{"loc":{"start":{"line":194,"column":13},"end":{"line":211,"column":9}},"type":"if","locations":[{"start":{"line":194,"column":13},"end":{"line":211,"column":9}},{"start":{"line":194,"column":13},"end":{"line":211,"column":9}}],"line":194},"37":{"loc":{"start":{"line":197,"column":13},"end":{"line":211,"column":9}},"type":"if","locations":[{"start":{"line":197,"column":13},"end":{"line":211,"column":9}},{"start":{"line":197,"column":13},"end":{"line":211,"column":9}}],"line":197},"38":{"loc":{"start":{"line":200,"column":13},"end":{"line":211,"column":9}},"type":"if","locations":[{"start":{"line":200,"column":13},"end":{"line":211,"column":9}},{"start":{"line":200,"column":13},"end":{"line":211,"column":9}}],"line":200},"39":{"loc":{"start":{"line":203,"column":13},"end":{"line":211,"column":9}},"type":"if","locations":[{"start":{"line":203,"column":13},"end":{"line":211,"column":9}},{"start":{"line":203,"column":13},"end":{"line":211,"column":9}}],"line":203},"40":{"loc":{"start":{"line":206,"column":13},"end":{"line":211,"column":9}},"type":"if","locations":[{"start":{"line":206,"column":13},"end":{"line":211,"column":9}},{"start":{"line":206,"column":13},"end":{"line":211,"column":9}}],"line":206},"41":{"loc":{"start":{"line":209,"column":13},"end":{"line":211,"column":9}},"type":"if","locations":[{"start":{"line":209,"column":13},"end":{"line":211,"column":9}},{"start":{"line":209,"column":13},"end":{"line":211,"column":9}}],"line":209},"42":{"loc":{"start":{"line":215,"column":8},"end":{"line":224,"column":9}},"type":"if","locations":[{"start":{"line":215,"column":8},"end":{"line":224,"column":9}},{"start":{"line":215,"column":8},"end":{"line":224,"column":9}}],"line":215},"43":{"loc":{"start":{"line":219,"column":12},"end":{"line":222,"column":13}},"type":"if","locations":[{"start":{"line":219,"column":12},"end":{"line":222,"column":13}},{"start":{"line":219,"column":12},"end":{"line":222,"column":13}}],"line":219},"44":{"loc":{"start":{"line":220,"column":23},"end":{"line":221,"column":78}},"type":"binary-expr","locations":[{"start":{"line":220,"column":23},"end":{"line":220,"column":64}},{"start":{"line":221,"column":20},"end":{"line":221,"column":78}}],"line":220},"45":{"loc":{"start":{"line":227,"column":8},"end":{"line":229,"column":9}},"type":"if","locations":[{"start":{"line":227,"column":8},"end":{"line":229,"column":9}},{"start":{"line":227,"column":8},"end":{"line":229,"column":9}}],"line":227},"46":{"loc":{"start":{"line":232,"column":12},"end":{"line":234,"column":13}},"type":"if","locations":[{"start":{"line":232,"column":12},"end":{"line":234,"column":13}},{"start":{"line":232,"column":12},"end":{"line":234,"column":13}}],"line":232},"47":{"loc":{"start":{"line":241,"column":12},"end":{"line":248,"column":13}},"type":"if","locations":[{"start":{"line":241,"column":12},"end":{"line":248,"column":13}},{"start":{"line":241,"column":12},"end":{"line":248,"column":13}}],"line":241},"48":{"loc":{"start":{"line":245,"column":16},"end":{"line":247,"column":17}},"type":"if","locations":[{"start":{"line":245,"column":16},"end":{"line":247,"column":17}},{"start":{"line":245,"column":16},"end":{"line":247,"column":17}}],"line":245},"49":{"loc":{"start":{"line":249,"column":12},"end":{"line":251,"column":13}},"type":"if","locations":[{"start":{"line":249,"column":12},"end":{"line":251,"column":13}},{"start":{"line":249,"column":12},"end":{"line":251,"column":13}}],"line":249},"50":{"loc":{"start":{"line":254,"column":12},"end":{"line":256,"column":13}},"type":"if","locations":[{"start":{"line":254,"column":12},"end":{"line":256,"column":13}},{"start":{"line":254,"column":12},"end":{"line":256,"column":13}}],"line":254},"51":{"loc":{"start":{"line":261,"column":8},"end":{"line":263,"column":9}},"type":"if","locations":[{"start":{"line":261,"column":8},"end":{"line":263,"column":9}},{"start":{"line":261,"column":8},"end":{"line":263,"column":9}}],"line":261},"52":{"loc":{"start":{"line":267,"column":8},"end":{"line":278,"column":9}},"type":"if","locations":[{"start":{"line":267,"column":8},"end":{"line":278,"column":9}},{"start":{"line":267,"column":8},"end":{"line":278,"column":9}}],"line":267},"53":{"loc":{"start":{"line":270,"column":13},"end":{"line":278,"column":9}},"type":"if","locations":[{"start":{"line":270,"column":13},"end":{"line":278,"column":9}},{"start":{"line":270,"column":13},"end":{"line":278,"column":9}}],"line":270},"54":{"loc":{"start":{"line":274,"column":28},"end":{"line":275,"column":60}},"type":"binary-expr","locations":[{"start":{"line":274,"column":28},"end":{"line":274,"column":69}},{"start":{"line":275,"column":16},"end":{"line":275,"column":60}}],"line":274}},"s":{"0":1,"1":23,"2":23,"3":29,"4":1,"5":28,"6":42,"7":25,"8":3,"9":30,"10":0,"11":30,"12":33,"13":27,"14":3,"15":4,"16":3,"17":1,"18":31,"19":1,"20":30,"21":30,"22":30,"23":1,"24":29,"25":29,"26":29,"27":29,"28":58,"29":29,"30":29,"31":0,"32":0,"33":29,"34":2,"35":27,"36":27,"37":5,"38":22,"39":5,"40":17,"41":2,"42":0,"43":2,"44":2,"45":2,"46":0,"47":2,"48":2,"49":2,"50":2,"51":4,"52":2,"53":2,"54":0,"55":0,"56":2,"57":0,"58":2,"59":2,"60":0,"61":2,"62":0,"63":2,"64":4,"65":0,"66":4,"67":4,"68":4,"69":0,"70":4,"71":4,"72":4,"73":4,"74":8,"75":4,"76":1,"77":3,"78":0,"79":4,"80":0,"81":4,"82":4,"83":0,"84":4,"85":0,"86":4,"87":18,"88":0,"89":18,"90":18,"91":18,"92":0,"93":18,"94":18,"95":18,"96":18,"97":36,"98":18,"99":4,"100":14,"101":0,"102":18,"103":0,"104":18,"105":18,"106":5,"107":13,"108":5,"109":8,"110":8,"111":1,"112":7,"113":124,"114":29,"115":95,"116":30,"117":65,"118":4,"119":61,"120":31,"121":30,"122":2,"123":28,"124":4,"125":24,"126":18,"127":6,"128":4,"129":2,"130":17,"131":0,"132":17,"133":13,"134":4,"135":17,"136":0,"137":17,"138":35,"139":35,"140":0,"141":35,"142":35,"143":35,"144":35,"145":70,"146":35,"147":4,"148":31,"149":1,"150":34,"151":3,"152":31,"153":31,"154":1,"155":12,"156":11,"157":1,"158":10,"159":52,"160":1,"161":50,"162":2,"163":48,"164":48,"165":48,"166":1},"f":{"0":23,"1":29,"2":30,"3":4,"4":31,"5":2,"6":4,"7":18,"8":124,"9":17,"10":17,"11":11,"12":52},"b":{"0":[1,28],"1":[25,17],"2":[0,30],"3":[27,6],"4":[3,1],"5":[1,30],"6":[1,29],"7":[29,0],"8":[0,0],"9":[2,27],"10":[5,22],"11":[5,17],"12":[0,2],"13":[0,2],"14":[2,0],"15":[0,0],"16":[0,2],"17":[0,2],"18":[0,2],"19":[0,4],"20":[0,4],"21":[1,3],"22":[0,3],"23":[0,4],"24":[0,4],"25":[0,4],"26":[0,18],"27":[0,18],"28":[4,14],"29":[0,14],"30":[0,18],"31":[5,13],"32":[5,8],"33":[1,7],"34":[29,95],"35":[30,65],"36":[4,61],"37":[31,30],"38":[2,28],"39":[4,24],"40":[18,6],"41":[4,2],"42":[0,17],"43":[13,4],"44":[13,11],"45":[0,17],"46":[0,35],"47":[4,31],"48":[1,30],"49":[3,31],"50":[1,30],"51":[1,10],"52":[1,50],"53":[2,48],"54":[48,17]},"inputSourceMap":{"version":3,"file":"/Users/tony/IdeaProjects/project_team122/src/controller/QueryModel.ts","sources":["/Users/tony/IdeaProjects/project_team122/src/controller/QueryModel.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightDataset} from \"./IInsightFacade\";\n\nexport interface Query {\n\tWHERE: Where;\n\tOPTIONS: Option;\n}\n\nexport interface Where {\n\tOR?: Where[];\n\tAND?: Where[];\n\tNOT?: Where;\n\tGT?: object;\n\tLT?: object;\n\tEQ?: object;\n\tIS?: object;\n}\n\nexport interface Negation {\n\tcondition: Where;\n}\n\nexport interface Option {\n\tCOLUMNS: string[];\n\tORDER?: string;\n}\n\nexport default class ValidationHelpers {\n\n\tprivate datasets: InsightDataset[];\n\tpublic initialMorSKey: string = \"_\";\n\tconstructor(datasets: InsightDataset[]) {\n\t\tthis.datasets = datasets;\n\t}\n\n\tpublic validateAnd(AND: Where[]) {\n\t\tif (AND.length === 0) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\tfor (const item of AND) {\n\t\t\t\tif (!this.validateQueryWhere(item)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic validateOr(OR: Where[]): boolean {\n\t\tif (OR.length === 0) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\tfor (const item of OR) {\n\t\t\t\tif (!this.validateQueryWhere(item)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic validateNot(NOT: Where): boolean {\n\t\tif (Object.keys(NOT).length !== 1) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.validateQueryWhere(NOT);\n\t}\n\n\tpublic validateGT(GT: object) {\n\t\tif (Object.keys(GT).length !== 1) {\n\t\t\treturn false;\n\t\t}\n\t\tconst mKey: string = Object.keys(GT)[0];\n\t\tconst underscoreIndex = mKey.indexOf(\"_\");\n\t\tif (underscoreIndex === -1) {\n\t\t\treturn false;\n\t\t}\n\t\tconst idString = mKey.substring(0, underscoreIndex);\n\t\tconst mField = mKey.substring(underscoreIndex + 1);\n\t\tconst ids: string[] = [];\n\t\tfor (let dataset of this.datasets) {\n\t\t\tids.push(dataset.id);\n\t\t}\n\t\tif (this.initialMorSKey === \"_\") {\n\t\t\tthis.initialMorSKey = idString;\n\t\t} else {\n\t\t\tif (this.initialMorSKey !== idString) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (!ids.includes(idString)) {\n\t\t\treturn false;\n\t\t}\n\t\tconst possibleMField: string[] = [\"avg\", \"pass\", \"fail\", \"audit\", \"year\"];\n\t\tif (!possibleMField.includes(mField)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof (GT as any)[mKey] !== \"number\") {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic validateLT(LT: object) {\n\t\tif (Object.keys(LT).length !== 1) {\n\t\t\treturn false;\n\t\t}\n\t\tconst mKey: string = Object.keys(LT)[0];\n\t\tconst underscoreIndex = mKey.indexOf(\"_\");\n\t\tif (underscoreIndex === -1) {\n\t\t\treturn false;\n\t\t}\n\t\tconst idString = mKey.substring(0, underscoreIndex);\n\t\tconst mField = mKey.substring(underscoreIndex + 1);\n\t\tconst ids: string[] = [];\n\t\tfor (let dataset of this.datasets) {\n\t\t\tids.push(dataset.id);\n\t\t}\n\t\tif (this.initialMorSKey === \"_\") {\n\t\t\tthis.initialMorSKey = idString;\n\t\t} else {\n\t\t\tif (this.initialMorSKey !== idString) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (!ids.includes(idString)) {\n\t\t\treturn false;\n\t\t}\n\t\tconst possibleMField: string[] = [\"avg\", \"pass\", \"fail\", \"audit\", \"year\"];\n\t\tif(!possibleMField.includes(mField)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof (LT as any)[mKey] !== \"number\") {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic validateEQ(EQ: object) {\n\t\tif (Object.keys(EQ).length !== 1) {\n\t\t\treturn false;\n\t\t}\n\t\tconst mKey: string = Object.keys(EQ)[0];\n\t\tconst underscoreIndex = mKey.indexOf(\"_\");\n\t\tif (underscoreIndex === -1) {\n\t\t\treturn false;\n\t\t}\n\t\tconst idString = mKey.substring(0, underscoreIndex);\n\t\tconst mField = mKey.substring(underscoreIndex + 1);\n\t\tconst ids: string[] = [];\n\t\tfor (let dataset of this.datasets) {\n\t\t\tids.push(dataset.id);\n\t\t}\n\t\tif (this.initialMorSKey === \"_\") {\n\t\t\tthis.initialMorSKey = idString;\n\t\t} else {\n\t\t\tif (this.initialMorSKey !== idString) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (!ids.includes(idString)) {\n\t\t\treturn false;\n\t\t}\n\t\tconst possibleMField: string[] = [\"avg\", \"pass\", \"fail\", \"audit\", \"year\"];\n\t\tif(!possibleMField.includes(mField)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof (EQ as any)[mKey] !== \"number\") {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic validateIS(IS: object) {\n\t\t{\n\t\t\tif (Object.keys(IS).length !== 1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst sKey: string = Object.keys(IS)[0];\n\t\t\tconst underscoreIndex = sKey.indexOf(\"_\");\n\t\t\tif (underscoreIndex === -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst idString = sKey.substring(0, underscoreIndex);\n\t\t\tconst sField = sKey.substring(underscoreIndex + 1);\n\t\t\tconst ids: string[] = [];\n\t\t\tfor (let dataset of this.datasets) {\n\t\t\t\tids.push(dataset.id);\n\t\t\t}\n\t\t\tif (this.initialMorSKey === \"_\") {\n\t\t\t\tthis.initialMorSKey = idString;\n\t\t\t} else {\n\t\t\t\tif (this.initialMorSKey !== idString) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!ids.includes(idString)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst possibleSField: string[] = [\"dept\", \"id\", \"instructor\", \"title\", \"uuid\"];\n\t\t\tif(!possibleSField.includes(sField)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (typeof (IS as any)[sKey] !== \"string\") {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst sValue: string = (IS as any)[sKey].substring(1, (IS as any)[sKey].length - 1);\n\t\t\tif (sValue.indexOf(\"*\") !== -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic validateQueryWhere(whereBlock: Where): boolean {\n\t\tif (whereBlock.AND !== undefined) {\n\t\t\treturn this.validateAnd(whereBlock.AND);\n\t\t} else if (whereBlock.OR !== undefined) {\n\t\t\treturn this.validateOr(whereBlock.OR);\n\t\t} else if (whereBlock.NOT !== undefined) {\n\t\t\treturn this.validateNot(whereBlock.NOT);\n\t\t} else if (whereBlock.GT !== undefined) {\n\t\t\treturn this.validateGT(whereBlock.GT);\n\t\t} else if (whereBlock.LT !== undefined) {\n\t\t\treturn this.validateLT(whereBlock.LT);\n\t\t} else if (whereBlock.EQ !== undefined) {\n\t\t\treturn this.validateEQ(whereBlock.EQ);\n\t\t} else if (whereBlock.IS !== undefined) {\n\t\t\treturn this.validateIS(whereBlock.IS);\n\t\t} else if (Object.keys(whereBlock).length === 0) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic validateQueryOption(optionBlock: Option): boolean {\n\t\tif (optionBlock.COLUMNS === undefined) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\tif (optionBlock.ORDER !== undefined) {\n\t\t\t\treturn this.validateColumns(optionBlock.COLUMNS) &&\n\t\t\t\t\tthis.validateOrder(optionBlock.ORDER, optionBlock.COLUMNS);\n\t\t\t}\n\t\t\treturn this.validateColumns((optionBlock.COLUMNS));\n\t\t}\n\t}\n\n\tpublic validateColumns(COLUMNS: string[]): boolean {\n\t\tif (COLUMNS.length === 0) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (const column of COLUMNS) {\n\t\t\tconst underscoreIndex = column.indexOf(\"_\");\n\t\t\tif (underscoreIndex === -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst idString = column.substring(0, underscoreIndex);\n\t\t\tconst mField = column.substring(underscoreIndex + 1);\n\t\t\tconst ids: string[] = [];\n\t\t\tfor (let dataset of this.datasets) {\n\t\t\t\tids.push(dataset.id);\n\t\t\t}\n\t\t\tif (this.initialMorSKey === \"_\") {\n\t\t\t\tthis.initialMorSKey = idString;\n\t\t\t} else {\n\t\t\t\tif (this.initialMorSKey !== idString) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!ids.includes(idString)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst possibleKey: string[] = [\"avg\", \"pass\", \"fail\", \"audit\", \"year\",\n\t\t\t\t\"dept\", \"id\", \"instructor\", \"title\", \"uuid\"];\n\t\t\tif(!possibleKey.includes(mField)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic validateOrder(Order: string, COLUMNS: string[]): boolean {\n\t\tif (!COLUMNS.includes(Order)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic validateQuery(queryModel: Query) {\n\t\tif(queryModel.WHERE == null) {\n\t\t\treturn false;\n\t\t} else if(queryModel.OPTIONS == null) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\tconst isValid: boolean = this.validateQueryWhere(queryModel.WHERE) &&\n\t\t\t\tthis.validateQueryOption(queryModel.OPTIONS);\n\t\t\tthis.initialMorSKey = \"_\";\n\t\t\treturn isValid;\n\t\t}\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"bcebd2808a8b5f7547e4ef49e34a789f52be6f15","contentHash":"1c7f65d2c0a72de9aee9d9b5203ae7d1dccb94cde3e7f1cd1f1ae7cde4d7c16b"},"/Users/tony/IdeaProjects/project_team122/src/controller/ValidQueryHelpers.ts":{"path":"/Users/tony/IdeaProjects/project_team122/src/controller/ValidQueryHelpers.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":24},"end":{"line":5,"column":53}},"2":{"start":{"line":6,"column":32},"end":{"line":6,"column":52}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":53}},"4":{"start":{"line":10,"column":29},"end":{"line":10,"column":31}},"5":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"6":{"start":{"line":12,"column":12},"end":{"line":12,"column":27}},"7":{"start":{"line":14,"column":8},"end":{"line":32,"column":9}},"8":{"start":{"line":15,"column":24},"end":{"line":15,"column":54}},"9":{"start":{"line":16,"column":22},"end":{"line":16,"column":38}},"10":{"start":{"line":17,"column":26},"end":{"line":17,"column":58}},"11":{"start":{"line":18,"column":29},"end":{"line":18,"column":43}},"12":{"start":{"line":19,"column":28},"end":{"line":19,"column":52}},"13":{"start":{"line":20,"column":26},"end":{"line":20,"column":39}},"14":{"start":{"line":21,"column":12},"end":{"line":21,"column":31}},"15":{"start":{"line":22,"column":31},"end":{"line":22,"column":72}},"16":{"start":{"line":23,"column":12},"end":{"line":31,"column":13}},"17":{"start":{"line":24,"column":16},"end":{"line":30,"column":17}},"18":{"start":{"line":25,"column":40},"end":{"line":25,"column":42}},"19":{"start":{"line":26,"column":20},"end":{"line":28,"column":21}},"20":{"start":{"line":27,"column":24},"end":{"line":27,"column":98}},"21":{"start":{"line":29,"column":20},"end":{"line":29,"column":53}},"22":{"start":{"line":33,"column":8},"end":{"line":33,"column":28}},"23":{"start":{"line":36,"column":8},"end":{"line":59,"column":9}},"24":{"start":{"line":38,"column":16},"end":{"line":38,"column":36}},"25":{"start":{"line":40,"column":16},"end":{"line":40,"column":34}},"26":{"start":{"line":42,"column":16},"end":{"line":42,"column":37}},"27":{"start":{"line":44,"column":16},"end":{"line":44,"column":42}},"28":{"start":{"line":46,"column":16},"end":{"line":46,"column":36}},"29":{"start":{"line":48,"column":16},"end":{"line":48,"column":36}},"30":{"start":{"line":50,"column":16},"end":{"line":50,"column":35}},"31":{"start":{"line":52,"column":16},"end":{"line":52,"column":36}},"32":{"start":{"line":54,"column":16},"end":{"line":54,"column":36}},"33":{"start":{"line":56,"column":16},"end":{"line":56,"column":37}},"34":{"start":{"line":58,"column":16},"end":{"line":58,"column":26}},"35":{"start":{"line":62,"column":18},"end":{"line":62,"column":41}},"36":{"start":{"line":63,"column":27},"end":{"line":63,"column":29}},"37":{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},"38":{"start":{"line":65,"column":12},"end":{"line":65,"column":68}},"39":{"start":{"line":67,"column":8},"end":{"line":67,"column":26}},"40":{"start":{"line":70,"column":0},"end":{"line":70,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":30},"end":{"line":8,"column":5}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":33},"end":{"line":34,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":37},"end":{"line":60,"column":5}},"line":35},"3":{"name":"(anonymous_3)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":27},"end":{"line":68,"column":5}},"line":61}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"type":"if","locations":[{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},{"start":{"line":11,"column":8},"end":{"line":13,"column":9}}],"line":11},"1":{"loc":{"start":{"line":14,"column":8},"end":{"line":32,"column":9}},"type":"if","locations":[{"start":{"line":14,"column":8},"end":{"line":32,"column":9}},{"start":{"line":14,"column":8},"end":{"line":32,"column":9}}],"line":14},"2":{"loc":{"start":{"line":24,"column":16},"end":{"line":30,"column":17}},"type":"if","locations":[{"start":{"line":24,"column":16},"end":{"line":30,"column":17}},{"start":{"line":24,"column":16},"end":{"line":30,"column":17}}],"line":24},"3":{"loc":{"start":{"line":36,"column":8},"end":{"line":59,"column":9}},"type":"switch","locations":[{"start":{"line":37,"column":12},"end":{"line":38,"column":36}},{"start":{"line":39,"column":12},"end":{"line":40,"column":34}},{"start":{"line":41,"column":12},"end":{"line":42,"column":37}},{"start":{"line":43,"column":12},"end":{"line":44,"column":42}},{"start":{"line":45,"column":12},"end":{"line":46,"column":36}},{"start":{"line":47,"column":12},"end":{"line":48,"column":36}},{"start":{"line":49,"column":12},"end":{"line":50,"column":35}},{"start":{"line":51,"column":12},"end":{"line":52,"column":36}},{"start":{"line":53,"column":12},"end":{"line":54,"column":36}},{"start":{"line":55,"column":12},"end":{"line":56,"column":37}},{"start":{"line":57,"column":12},"end":{"line":58,"column":26}}],"line":36}},"s":{"0":1,"1":29,"2":29,"3":29,"4":11,"5":11,"6":1,"7":10,"8":2,"9":2,"10":2,"11":2,"12":2,"13":2,"14":2,"15":2,"16":2,"17":129224,"18":6151,"19":6151,"20":12302,"21":6151,"22":10,"23":129224,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":129224,"31":0,"32":0,"33":0,"34":0,"35":2,"36":2,"37":2,"38":4,"39":2,"40":1},"f":{"0":29,"1":11,"2":129224,"3":2},"b":{"0":[1,10],"1":[2,8],"2":[6151,123073],"3":[0,0,0,0,0,0,129224,0,0,0,0]},"inputSourceMap":{"version":3,"file":"/Users/tony/IdeaProjects/project_team122/src/controller/ValidQueryHelpers.ts","sources":["/Users/tony/IdeaProjects/project_team122/src/controller/ValidQueryHelpers.ts"],"names":[],"mappings":"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","sourcesContent":["import {Query, Where} from \"./QueryModel\";\nimport {InsightDataset, InsightError, InsightResult, ResultTooLargeError} from \"./IInsightFacade\";\n\nexport default class ValidQueryHelpers {\n\n\tpublic findDatasetId(validQuery: Query): string {\n\t\tconst keyPair = validQuery.OPTIONS.COLUMNS[0];\n\t\tconst underscoreIndex = keyPair.indexOf(\"_\");\n\t\treturn keyPair.substring(0,underscoreIndex);\n\t}\n\n\tpublic filterResult(query: Query, dataset: any): InsightResult[] {\n\n\t\tconst returnResult: InsightResult[] = [];\n\t\tif (Object.keys(query.WHERE).length === 0) {\n\t\t\treturn dataset;\n\t\t}\n\t\tif (query.WHERE.GT !== undefined) {\n\t\t\tconst key = Object.keys(query.WHERE.GT)[0];\n\t\t\tconst i = key.indexOf(\"_\");\n\t\t\tconst field = key.substring(i + 1, key.length);\n\t\t\tconst gtObject = query.WHERE.GT;\n\t\t\tconst gtArray = Object.entries(gtObject);\n\t\t\tconst value = gtArray[0][1];\n\t\t\tconsole.log(value);\n\t\t\tconst attributes = this.getAttributes(query.OPTIONS.COLUMNS);\n\t\t\tfor (const element of dataset) {\n\t\t\t\tif (this.findElementValue(field, element) > value) {\n\t\t\t\t\tlet resultElement: InsightResult = {};\n\t\t\t\t\tfor (const attribute of attributes) {\n\t\t\t\t\t\tresultElement[key.substring(0, i) + \"_\" + attribute] = element[attribute];\n\t\t\t\t\t}\n\t\t\t\t\treturnResult.push(resultElement);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn returnResult;\n\t}\n\n\tpublic findElementValue(field: string, element: any): number {\n\t\tswitch (field) {\n\t\t\tcase \"uuid\":\n\t\t\t\treturn element.uuid;\n\t\t\tcase \"id\":\n\t\t\t\treturn element.id;\n\t\t\tcase \"title\":\n\t\t\t\treturn element.title;\n\t\t\tcase \"instructor\":\n\t\t\t\treturn element.instructor;\n\t\t\tcase \"dept\":\n\t\t\t\treturn element.dept;\n\t\t\tcase \"year\":\n\t\t\t\treturn element.year;\n\t\t\tcase \"avg\":\n\t\t\t\treturn element.avg;\n\t\t\tcase \"pass\":\n\t\t\t\treturn element.pass;\n\t\t\tcase \"fail\":\n\t\t\t\treturn element.fail;\n\t\t\tcase \"audit\":\n\t\t\t\treturn element.audit;\n\t\t\tdefault:\n\t\t\t\treturn -1;\n\t\t}\n\t}\n\n\tpublic getAttributes(columns: string[]): string[] {\n\t\tconst i = columns[0].indexOf(\"_\");\n\t\tconst attributes: string[] = [];\n\t\tfor (const column of columns) {\n\t\t\tattributes.push(column.substring(i + 1, column.length));\n\t\t}\n\t\treturn attributes;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0ffc602c9a9f3a637db0cfbdb3b4daee2df66ea9","contentHash":"ee0875d28dde7aa76b6faa5acd067ded9db04cd2dd30922f1b07a6c963170d0b"}}